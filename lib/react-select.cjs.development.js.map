{"version":3,"file":"react-select.cjs.development.js","sources":["../src/utils.ts","../src/components/Menu.tsx","../src/internal/A11yText.tsx","../src/accessibility/index.ts","../src/components/LiveRegion.tsx","../src/diacritics.ts","../src/filters.ts","../src/internal/DummyInput.tsx","../src/internal/useScrollCapture.ts","../src/internal/useScrollLock.ts","../src/internal/ScrollManager.tsx","../src/builtins.ts","../src/components/containers.tsx","../src/components/indicators.tsx","../src/components/Control.tsx","../src/components/Group.tsx","../src/components/Input.tsx","../src/components/MultiValue.tsx","../src/components/Option.tsx","../src/components/Placeholder.tsx","../src/components/SingleValue.tsx","../src/components/index.ts","../src/styles.ts","../src/theme.ts","../src/Select.tsx","../src/useStateManager.ts","../src/stateManager.tsx","../src/NonceProvider.tsx"],"sourcesContent":["import {\n  ClassNamesState,\n  CommonPropsAndClassName,\n  GroupBase,\n  InputActionMeta,\n  MultiValue,\n  OnChangeValue,\n  OptionBase,\n  Options,\n  PropsValue,\n  SingleValue,\n} from './types';\n\n// ==============================\n// NO OP\n// ==============================\n\nexport const noop = () => {};\nexport const emptyString = () => '';\n\n// ==============================\n// Class Name Prefixer\n// ==============================\n\n/**\n String representation of component state for styling with class names.\n\n Expects an array of strings OR a string/object pair:\n - className(['comp', 'comp-arg', 'comp-arg-2'])\n   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'\n - className('comp', { some: true, state: false })\n   @returns 'react-select__comp react-select__comp--some'\n*/\nfunction applyPrefixToName(prefix: string, name: string) {\n  if (!name) {\n    return prefix;\n  } else if (name[0] === '-') {\n    return prefix + name;\n  } else {\n    return prefix + '__' + name;\n  }\n}\n\nexport function classNames(\n  prefix?: string | null,\n  state?: ClassNamesState,\n  className?: string\n) {\n  const arr = [className];\n  if (state && prefix) {\n    for (let key in state) {\n      if (state.hasOwnProperty(key) && state[key]) {\n        arr.push(`${applyPrefixToName(prefix, key)}`);\n      }\n    }\n  }\n\n  return arr\n    .filter((i) => i)\n    .map((i) => String(i).trim())\n    .join(' ');\n}\n// ==============================\n// Clean Value\n// ==============================\n\nexport const cleanValue = <Option extends OptionBase>(\n  value: PropsValue<Option>\n): Options<Option> => {\n  if (isArray(value)) return value.filter(Boolean);\n  if (typeof value === 'object' && value !== null) return [value];\n  return [];\n};\n\n// ==============================\n// Clean Common Props\n// ==============================\n\nexport const cleanCommonProps = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>,\n  AdditionalProps\n>(\n  props: Partial<CommonPropsAndClassName<Option, IsMulti, Group>> &\n    AdditionalProps\n): Omit<\n  AdditionalProps,\n  keyof CommonPropsAndClassName<Option, IsMulti, Group>\n> => {\n  //className\n  const {\n    className, // not listed in commonProps documentation, needs to be removed to allow Emotion to generate classNames\n    clearValue,\n    cx,\n    getStyles,\n    getValue,\n    hasValue,\n    isMulti,\n    isRtl,\n    options, // not listed in commonProps documentation\n    selectOption,\n    selectProps,\n    setValue,\n    theme, // not listed in commonProps documentation\n    ...innerProps\n  } = props;\n  return { ...innerProps };\n};\n\n// ==============================\n// Handle Input Change\n// ==============================\n\nexport function handleInputChange(\n  inputValue: string,\n  actionMeta: InputActionMeta,\n  onInputChange?: (\n    newValue: string,\n    actionMeta: InputActionMeta\n  ) => string | void\n) {\n  if (onInputChange) {\n    const newValue = onInputChange(inputValue, actionMeta);\n    if (typeof newValue === 'string') return newValue;\n  }\n  return inputValue;\n}\n\n// ==============================\n// Scroll Helpers\n// ==============================\n\nexport function isDocumentElement(\n  el: HTMLElement | typeof window\n): el is typeof window {\n  return [document.documentElement, document.body, window].indexOf(el) > -1;\n}\n\n// Normalized Scroll Top\n// ------------------------------\n\nexport function normalizedHeight(el: HTMLElement | typeof window): number {\n  if (isDocumentElement(el)) {\n    return window.innerHeight;\n  }\n\n  return el.clientHeight;\n}\n\n// Normalized scrollTo & scrollTop\n// ------------------------------\n\nexport function getScrollTop(el: HTMLElement | typeof window): number {\n  if (isDocumentElement(el)) {\n    return window.pageYOffset;\n  }\n  return el.scrollTop;\n}\n\nexport function scrollTo(el: HTMLElement | typeof window, top: number): void {\n  // with a scroll distance, we perform scroll on the element\n  if (isDocumentElement(el)) {\n    window.scrollTo(0, top);\n    return;\n  }\n\n  el.scrollTop = top;\n}\n\n// Get Scroll Parent\n// ------------------------------\n\nexport function getScrollParent(element: HTMLElement) {\n  let style = getComputedStyle(element);\n  const excludeStaticParent = style.position === 'absolute';\n  const overflowRx = /(auto|scroll)/;\n\n  if (style.position === 'fixed') return document.documentElement;\n\n  for (\n    let parent: HTMLElement | null = element;\n    (parent = parent.parentElement);\n\n  ) {\n    style = getComputedStyle(parent);\n    if (excludeStaticParent && style.position === 'static') {\n      continue;\n    }\n    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {\n      return parent;\n    }\n  }\n\n  return document.documentElement;\n}\n\n// Animated Scroll To\n// ------------------------------\n\n/**\n  @param t: time (elapsed)\n  @param b: initial value\n  @param c: amount of change\n  @param d: duration\n*/\nfunction easeOutCubic(t: number, b: number, c: number, d: number): number {\n  return c * ((t = t / d - 1) * t * t + 1) + b;\n}\n\nexport function animatedScrollTo(\n  element: HTMLElement | typeof window,\n  to: number,\n  duration = 200,\n  callback: (element: HTMLElement | typeof window) => void = noop\n) {\n  const start = getScrollTop(element);\n  const change = to - start;\n  const increment = 10;\n  let currentTime = 0;\n\n  function animateScroll() {\n    currentTime += increment;\n    const val = easeOutCubic(currentTime, start, change, duration);\n    scrollTo(element, val);\n    if (currentTime < duration) {\n      window.requestAnimationFrame(animateScroll);\n    } else {\n      callback(element);\n    }\n  }\n  animateScroll();\n}\n\n// Scroll Into View\n// ------------------------------\n\nexport function scrollIntoView(\n  menuEl: HTMLElement,\n  focusedEl: HTMLElement\n): void {\n  const menuRect = menuEl.getBoundingClientRect();\n  const focusedRect = focusedEl.getBoundingClientRect();\n  const overScroll = focusedEl.offsetHeight / 3;\n\n  if (focusedRect.bottom + overScroll > menuRect.bottom) {\n    scrollTo(\n      menuEl,\n      Math.min(\n        focusedEl.offsetTop +\n          focusedEl.clientHeight -\n          menuEl.offsetHeight +\n          overScroll,\n        menuEl.scrollHeight\n      )\n    );\n  } else if (focusedRect.top - overScroll < menuRect.top) {\n    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));\n  }\n}\n\n// ==============================\n// Get bounding client object\n// ==============================\n\n// cannot get keys using array notation with DOMRect\nexport function getBoundingClientObj(element: HTMLElement) {\n  const rect = element.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width,\n  };\n}\nexport interface RectType {\n  left: number;\n  right: number;\n  bottom: number;\n  height: number;\n  width: number;\n}\n\n// ==============================\n// String to Key (kebabify)\n// ==============================\n\nexport function toKey(str: string) {\n  return str.replace(/\\W/g, '-');\n}\n\n// ==============================\n// Touch Capability Detector\n// ==============================\n\nexport function isTouchCapable() {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// ==============================\n// Mobile Device Detector\n// ==============================\n\nexport function isMobileDevice() {\n  try {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n// ==============================\n// Passive Event Detector\n// ==============================\n\n// https://github.com/rafgraph/detect-it/blob/main/src/index.ts#L19-L36\nlet passiveOptionAccessed = false;\nconst options = {\n  get passive() {\n    return (passiveOptionAccessed = true);\n  },\n};\n// check for SSR\nconst w:\n  | typeof window\n  | { addEventListener?: never; removeEventListener?: never } =\n  typeof window !== 'undefined' ? window : {};\nif (w.addEventListener && w.removeEventListener) {\n  w.addEventListener('p', noop, options);\n  w.removeEventListener('p', noop, false);\n}\n\nexport const supportsPassiveEvents: boolean = passiveOptionAccessed;\n\nexport function notNullish<T>(item: T | null | undefined): item is T {\n  return item != null;\n}\n\nexport function isArray<T>(arg: unknown): arg is readonly T[] {\n  return Array.isArray(arg);\n}\n\nexport function valueTernary<\n  Option extends OptionBase,\n  IsMulti extends boolean\n>(\n  isMulti: IsMulti | undefined,\n  multiValue: MultiValue<Option>,\n  singleValue: SingleValue<Option>\n): OnChangeValue<Option, IsMulti> {\n  return (isMulti ? multiValue : singleValue) as OnChangeValue<Option, IsMulti>;\n}\n\nexport function singleValueAsValue<\n  Option extends OptionBase,\n  IsMulti extends boolean\n>(singleValue: SingleValue<Option>): OnChangeValue<Option, IsMulti> {\n  return singleValue as OnChangeValue<Option, IsMulti>;\n}\n\nexport function multiValueAsValue<\n  Option extends OptionBase,\n  IsMulti extends boolean\n>(multiValue: MultiValue<Option>): OnChangeValue<Option, IsMulti> {\n  return multiValue as OnChangeValue<Option, IsMulti>;\n}\n","/** @jsx jsx */\nimport {\n  createContext,\n  Component,\n  ReactNode,\n  RefCallback,\n  ContextType,\n} from 'react';\nimport { jsx } from '@emotion/react';\nimport { createPortal } from 'react-dom';\n\nimport {\n  animatedScrollTo,\n  getBoundingClientObj,\n  RectType,\n  getScrollParent,\n  getScrollTop,\n  scrollTo,\n} from '../utils';\nimport {\n  MenuPlacement,\n  MenuPosition,\n  CommonProps,\n  Theme,\n  OptionBase,\n  GroupBase,\n  CommonPropsAndClassName,\n  CoercedMenuPlacement,\n  CSSObjectWithLabel,\n} from '../types';\n\n// ==============================\n// Menu\n// ==============================\n\n// Get Menu Placement\n// ------------------------------\n\ninterface MenuState {\n  placement: CoercedMenuPlacement | null;\n  maxHeight: number;\n}\ninterface PlacementArgs {\n  maxHeight: number;\n  menuEl: HTMLDivElement | null;\n  minHeight: number;\n  placement: MenuPlacement;\n  shouldScroll: boolean;\n  isFixedPosition: boolean;\n  theme: Theme;\n}\n\nexport function getMenuPlacement({\n  maxHeight,\n  menuEl,\n  minHeight,\n  placement,\n  shouldScroll,\n  isFixedPosition,\n  theme,\n}: PlacementArgs): MenuState {\n  const { spacing } = theme;\n  const scrollParent = getScrollParent(menuEl!);\n  const defaultState: MenuState = { placement: 'bottom', maxHeight };\n\n  // something went wrong, return default state\n  if (!menuEl || !menuEl.offsetParent) return defaultState;\n\n  // we can't trust `scrollParent.scrollHeight` --> it may increase when\n  // the menu is rendered\n  const { height: scrollHeight } = scrollParent.getBoundingClientRect();\n  const {\n    bottom: menuBottom,\n    height: menuHeight,\n    top: menuTop,\n  } = menuEl.getBoundingClientRect();\n\n  const { top: containerTop } = menuEl.offsetParent.getBoundingClientRect();\n  const viewHeight = window.innerHeight;\n  const scrollTop = getScrollTop(scrollParent);\n\n  const marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);\n  const marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);\n  const viewSpaceAbove = containerTop - marginTop;\n  const viewSpaceBelow = viewHeight - menuTop;\n  const scrollSpaceAbove = viewSpaceAbove + scrollTop;\n  const scrollSpaceBelow = scrollHeight - scrollTop - menuTop;\n\n  const scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;\n  const scrollUp = scrollTop + menuTop - marginTop;\n  const scrollDuration = 160;\n\n  switch (placement) {\n    case 'auto':\n    case 'bottom':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceBelow >= menuHeight) {\n        return { placement: 'bottom', maxHeight };\n      }\n\n      // 2: the menu will fit, if scrolled\n      if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollDown, scrollDuration);\n        }\n\n        return { placement: 'bottom', maxHeight };\n      }\n\n      // 3: the menu will fit, if constrained\n      if (\n        (!isFixedPosition && scrollSpaceBelow >= minHeight) ||\n        (isFixedPosition && viewSpaceBelow >= minHeight)\n      ) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollDown, scrollDuration);\n        }\n\n        // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n        const constrainedHeight = isFixedPosition\n          ? viewSpaceBelow - marginBottom\n          : scrollSpaceBelow - marginBottom;\n\n        return {\n          placement: 'bottom',\n          maxHeight: constrainedHeight,\n        };\n      }\n\n      // 4. Forked beviour when there isn't enough space below\n\n      // AUTO: flip the menu, render above\n      if (placement === 'auto' || isFixedPosition) {\n        // may need to be constrained after flipping\n        let constrainedHeight = maxHeight;\n        const spaceAbove = isFixedPosition ? viewSpaceAbove : scrollSpaceAbove;\n\n        if (spaceAbove >= minHeight) {\n          constrainedHeight = Math.min(\n            spaceAbove - marginBottom - spacing.controlHeight,\n            maxHeight\n          );\n        }\n\n        return { placement: 'top', maxHeight: constrainedHeight };\n      }\n\n      // BOTTOM: allow browser to increase scrollable area and immediately set scroll\n      if (placement === 'bottom') {\n        if (shouldScroll) {\n          scrollTo(scrollParent, scrollDown);\n        }\n        return { placement: 'bottom', maxHeight };\n      }\n      break;\n    case 'top':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceAbove >= menuHeight) {\n        return { placement: 'top', maxHeight };\n      }\n\n      // 2: the menu will fit, if scrolled\n      if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return { placement: 'top', maxHeight };\n      }\n\n      // 3: the menu will fit, if constrained\n      if (\n        (!isFixedPosition && scrollSpaceAbove >= minHeight) ||\n        (isFixedPosition && viewSpaceAbove >= minHeight)\n      ) {\n        let constrainedHeight = maxHeight;\n\n        // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n        if (\n          (!isFixedPosition && scrollSpaceAbove >= minHeight) ||\n          (isFixedPosition && viewSpaceAbove >= minHeight)\n        ) {\n          constrainedHeight = isFixedPosition\n            ? viewSpaceAbove - marginTop\n            : scrollSpaceAbove - marginTop;\n        }\n\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return {\n          placement: 'top',\n          maxHeight: constrainedHeight,\n        };\n      }\n\n      // 4. not enough space, the browser WILL NOT increase scrollable area when\n      // absolutely positioned element rendered above the viewport (only below).\n      // Flip the menu, render below\n      return { placement: 'bottom', maxHeight };\n    default:\n      throw new Error(`Invalid placement provided \"${placement}\".`);\n  }\n\n  return defaultState;\n}\n\n// Menu Component\n// ------------------------------\n\nexport interface MenuPlacementProps {\n  /** Set the minimum height of the menu. */\n  minMenuHeight: number;\n  /** Set the maximum height of the menu. */\n  maxMenuHeight: number;\n  /** Set whether the menu should be at the top, at the bottom. The auto options sets it to bottom. */\n  menuPlacement: MenuPlacement;\n  /** The CSS position value of the menu, when \"fixed\" extra layout management is required */\n  menuPosition: MenuPosition;\n  /** Set whether the page should scroll to show the menu. */\n  menuShouldScrollIntoView: boolean;\n}\n\nexport interface MenuProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group>,\n    MenuPlacementProps {\n  /** Reference to the internal element, consumed by the MenuPlacer component */\n  innerRef: RefCallback<HTMLDivElement>;\n  innerProps: JSX.IntrinsicElements['div'];\n  isLoading: boolean;\n  placement: CoercedMenuPlacement;\n  /** The children to be rendered. */\n  children: ReactNode;\n}\n\ninterface PlacerProps {\n  placement: CoercedMenuPlacement;\n  maxHeight: number;\n}\n\ninterface ChildrenProps {\n  ref: RefCallback<HTMLDivElement>;\n  placerProps: PlacerProps;\n}\n\nexport interface MenuPlacerProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> extends CommonProps<Option, IsMulti, Group>,\n    MenuPlacementProps {\n  /** The children to be rendered. */\n  children: (childrenProps: ChildrenProps) => ReactNode;\n}\n\nfunction alignToControl(placement: CoercedMenuPlacement) {\n  const placementToCSSProp = { bottom: 'top', top: 'bottom' };\n  return placement ? placementToCSSProp[placement] : 'bottom';\n}\nconst coercePlacement = (p: MenuPlacement) => (p === 'auto' ? 'bottom' : p);\n\nexport const menuCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  placement,\n  theme: { borderRadius, spacing, colors },\n}: MenuProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'menu',\n  [alignToControl(placement)]: '100%',\n  backgroundColor: colors.neutral0,\n  borderRadius: borderRadius,\n  boxShadow: '0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)',\n  marginBottom: spacing.menuGutter,\n  marginTop: spacing.menuGutter,\n  position: 'absolute',\n  width: '100%',\n  zIndex: 1,\n});\n\nconst PortalPlacementContext = createContext<{\n  getPortalPlacement: ((menuState: MenuState) => void) | null;\n}>({ getPortalPlacement: null });\n\n// NOTE: internal only\nexport class MenuPlacer<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> extends Component<MenuPlacerProps<Option, IsMulti, Group>, MenuState> {\n  state: MenuState = {\n    maxHeight: this.props.maxMenuHeight,\n    placement: null,\n  };\n  static contextType = PortalPlacementContext;\n  context!: ContextType<typeof PortalPlacementContext>;\n\n  getPlacement: RefCallback<HTMLDivElement> = (ref) => {\n    const {\n      minMenuHeight,\n      maxMenuHeight,\n      menuPlacement,\n      menuPosition,\n      menuShouldScrollIntoView,\n      theme,\n    } = this.props;\n\n    if (!ref) return;\n\n    // DO NOT scroll if position is fixed\n    const isFixedPosition = menuPosition === 'fixed';\n    const shouldScroll = menuShouldScrollIntoView && !isFixedPosition;\n\n    const state = getMenuPlacement({\n      maxHeight: maxMenuHeight,\n      menuEl: ref,\n      minHeight: minMenuHeight,\n      placement: menuPlacement,\n      shouldScroll,\n      isFixedPosition,\n      theme,\n    });\n\n    const { getPortalPlacement } = this.context;\n    if (getPortalPlacement) getPortalPlacement(state);\n\n    this.setState(state);\n  };\n  getUpdatedProps = () => {\n    const { menuPlacement } = this.props;\n    const placement = this.state.placement || coercePlacement(menuPlacement);\n\n    return { ...this.props, placement, maxHeight: this.state.maxHeight };\n  };\n  render() {\n    const { children } = this.props;\n\n    return children({\n      ref: this.getPlacement,\n      placerProps: this.getUpdatedProps(),\n    });\n  }\n}\n\nconst Menu = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: MenuProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerRef, innerProps } = props;\n\n  return (\n    <div\n      css={getStyles('menu', props)}\n      className={cx({ menu: true }, className)}\n      ref={innerRef}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Menu;\n\n// ==============================\n// Menu List\n// ==============================\n\nexport interface MenuListProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** Set the max height of the Menu component  */\n  maxHeight: number;\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** Inner ref to DOM ReactNode */\n  innerRef: RefCallback<HTMLDivElement>;\n  /** The currently focused option */\n  focusedOption: Option;\n  /** Props to be passed to the menu-list wrapper. */\n  innerProps: JSX.IntrinsicElements['div'];\n}\nexport const menuListCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  maxHeight,\n  theme: {\n    spacing: { baseUnit },\n  },\n}: MenuListProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  maxHeight,\n  overflowY: 'auto',\n  paddingBottom: baseUnit,\n  paddingTop: baseUnit,\n  position: 'relative', // required for offset[Height, Top] > keyboard scroll\n  WebkitOverflowScrolling: 'touch',\n});\nexport const MenuList = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: MenuListProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps, innerRef, isMulti } =\n    props;\n  return (\n    <div\n      css={getStyles('menuList', props)}\n      className={cx(\n        {\n          'menu-list': true,\n          'menu-list--is-multi': isMulti,\n        },\n        className\n      )}\n      ref={innerRef}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\n// ==============================\n// Menu Notices\n// ==============================\n\nconst noticeCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: {\n    spacing: { baseUnit },\n    colors,\n  },\n}: NoticeProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  color: colors.neutral40,\n  padding: `${baseUnit * 2}px ${baseUnit * 3}px`,\n  textAlign: 'center',\n});\nexport const noOptionsMessageCSS = noticeCSS;\nexport const loadingMessageCSS = noticeCSS;\n\nexport interface NoticeProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** Props to be passed on to the wrapper. */\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const NoOptionsMessage = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: NoticeProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps } = props;\n  return (\n    <div\n      css={getStyles('noOptionsMessage', props)}\n      className={cx(\n        {\n          'menu-notice': true,\n          'menu-notice--no-options': true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\nNoOptionsMessage.defaultProps = {\n  children: 'No options',\n};\n\nexport const LoadingMessage = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: NoticeProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps } = props;\n  return (\n    <div\n      css={getStyles('loadingMessage', props)}\n      className={cx(\n        {\n          'menu-notice': true,\n          'menu-notice--loading': true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\nLoadingMessage.defaultProps = {\n  children: 'Loading...',\n};\n\n// ==============================\n// Menu Portal\n// ==============================\n\nexport interface MenuPortalProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  appendTo: HTMLElement | undefined;\n  children: ReactNode; // ideally Menu<MenuProps>\n  controlElement: HTMLDivElement | null;\n  innerProps: JSX.IntrinsicElements['div'];\n  menuPlacement: MenuPlacement;\n  menuPosition: MenuPosition;\n}\n\ninterface MenuPortalState {\n  placement: 'bottom' | 'top' | null;\n}\n\nexport interface PortalStyleArgs {\n  offset: number;\n  position: MenuPosition;\n  rect: RectType;\n}\n\nexport const menuPortalCSS = ({\n  rect,\n  offset,\n  position,\n}: PortalStyleArgs): CSSObjectWithLabel => ({\n  left: rect.left,\n  position: position,\n  top: offset,\n  width: rect.width,\n  zIndex: 1,\n});\n\nexport class MenuPortal<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> extends Component<MenuPortalProps<Option, IsMulti, Group>, MenuPortalState> {\n  state: MenuPortalState = { placement: null };\n\n  // callback for occassions where the menu must \"flip\"\n  getPortalPlacement = ({ placement }: MenuState) => {\n    const initialPlacement = coercePlacement(this.props.menuPlacement);\n\n    // avoid re-renders if the placement has not changed\n    if (placement !== initialPlacement) {\n      this.setState({ placement });\n    }\n  };\n  render() {\n    const {\n      appendTo,\n      children,\n      className,\n      controlElement,\n      cx,\n      innerProps,\n      menuPlacement,\n      menuPosition: position,\n      getStyles,\n    } = this.props;\n    const isFixed = position === 'fixed';\n\n    // bail early if required elements aren't present\n    if ((!appendTo && !isFixed) || !controlElement) {\n      return null;\n    }\n\n    const placement = this.state.placement || coercePlacement(menuPlacement);\n    const rect = getBoundingClientObj(controlElement);\n    const scrollDistance = isFixed ? 0 : window.pageYOffset;\n    const offset = rect[placement] + scrollDistance;\n    const state = { offset, position, rect };\n\n    // same wrapper element whether fixed or portalled\n    const menuWrapper = (\n      <div\n        css={getStyles('menuPortal', state)}\n        className={cx(\n          {\n            'menu-portal': true,\n          },\n          className\n        )}\n        {...innerProps}\n      >\n        {children}\n      </div>\n    );\n\n    return (\n      <PortalPlacementContext.Provider\n        value={{ getPortalPlacement: this.getPortalPlacement }}\n      >\n        {appendTo ? createPortal(menuWrapper, appendTo) : menuWrapper}\n      </PortalPlacementContext.Provider>\n    );\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react';\n\n// Assistive text to describe visual elements. Hidden for sighted users.\nconst A11yText = (props: JSX.IntrinsicElements['span']) => (\n  <span\n    css={{\n      label: 'a11yText',\n      zIndex: 9999,\n      border: 0,\n      clip: 'rect(1px, 1px, 1px, 1px)',\n      height: 1,\n      width: 1,\n      position: 'absolute',\n      overflow: 'hidden',\n      padding: 0,\n      whiteSpace: 'nowrap',\n    }}\n    {...props}\n  />\n);\n\nexport default A11yText;\n","import {\n  ActionMeta,\n  GroupBase,\n  InitialInputFocusedActionMeta,\n  OnChangeValue,\n  OptionBase,\n  Options,\n  OptionsOrGroups,\n} from '../types';\n\nexport type OptionContext = 'menu' | 'value';\n\nexport type GuidanceContext = 'menu' | 'input' | 'value';\n\nexport type AriaLive = 'polite' | 'off' | 'assertive';\n\nexport type AriaSelection<Option extends OptionBase, IsMulti extends boolean> =\n  | InitialInputFocusedActionMeta<Option, IsMulti>\n  | (ActionMeta<Option> & {\n      value: OnChangeValue<Option, IsMulti>;\n      option?: Option;\n      options?: Options<Option>;\n    });\n\nexport interface AriaGuidanceProps {\n  /** String value of selectProp aria-label */\n  'aria-label': string | undefined;\n  /** String indicating user's current context and available keyboard interactivity */\n  context: GuidanceContext;\n  /** Boolean value of selectProp isSearchable */\n  isSearchable: boolean;\n  /** Boolean value of selectProp isMulti */\n  isMulti: boolean;\n  /** Boolean value of selectProp isDisabled */\n  isDisabled: boolean | null;\n  /** Boolean value of selectProp tabSelectsValue */\n  tabSelectsValue: boolean;\n}\n\nexport type AriaOnChangeProps<\n  Option extends OptionBase,\n  IsMulti extends boolean\n> = AriaSelection<Option, IsMulti> & {\n  /** String derived label from selected or removed option/value */\n  label: string;\n  /** Array of labels derived from multiple selected or cleared options */\n  labels: string[];\n  /** Boolean indicating if the selected menu option is disabled */\n  isDisabled: boolean | null;\n};\n\nexport interface AriaOnFilterProps {\n  /** String indicating current inputValue of the input */\n  inputValue: string;\n  /** String derived from selectProp screenReaderStatus */\n  resultsMessage: string;\n}\n\nexport interface AriaOnFocusProps<\n  Option extends OptionBase,\n  Group extends GroupBase<Option>\n> {\n  /** String indicating whether the option was focused in the menu or as (multi-) value */\n  context: OptionContext;\n  /** Option that is being focused */\n  focused: Option;\n  /** Boolean indicating whether focused menu option has been disabled */\n  isDisabled: boolean;\n  /** Boolean indicating whether focused menu option is an already selected option */\n  isSelected: boolean;\n  /** String derived label from focused option/value */\n  label: string;\n  /** Options provided as props to Select used to determine indexing */\n  options: OptionsOrGroups<Option, Group>;\n  /** selected option(s) of the Select */\n  selectValue: Options<Option>;\n}\n\nexport type AriaGuidance = (props: AriaGuidanceProps) => string;\nexport type AriaOnChange<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean\n> = (props: AriaOnChangeProps<Option, IsMulti>) => string;\nexport type AriaOnFilter = (props: AriaOnFilterProps) => string;\nexport type AriaOnFocus<\n  Option extends OptionBase = OptionBase,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = (props: AriaOnFocusProps<Option, Group>) => string;\n\nexport interface AriaLiveMessages<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  /** Guidance message used to convey component state and specific keyboard interactivity */\n  guidance?: (props: AriaGuidanceProps) => string;\n  /** OnChange message used to convey changes to value but also called when user selects disabled option */\n  onChange?: (props: AriaOnChangeProps<Option, IsMulti>) => string;\n  /** OnFilter message used to convey information about filtered results displayed in the menu */\n  onFilter?: (props: AriaOnFilterProps) => string;\n  /** OnFocus message used to convey information about the currently focused option or value */\n  onFocus?: (props: AriaOnFocusProps<Option, Group>) => string;\n}\n\nexport const defaultAriaLiveMessages = {\n  guidance: (props: AriaGuidanceProps) => {\n    const { isSearchable, isMulti, isDisabled, tabSelectsValue, context } =\n      props;\n    switch (context) {\n      case 'menu':\n        return `Use Up and Down to choose options${\n          isDisabled\n            ? ''\n            : ', press Enter to select the currently focused option'\n        }, press Escape to exit the menu${\n          tabSelectsValue\n            ? ', press Tab to select the option and exit the menu'\n            : ''\n        }.`;\n      case 'input':\n        return `${props['aria-label'] || 'Select'} is focused ${\n          isSearchable ? ',type to refine list' : ''\n        }, press Down to open the menu, ${\n          isMulti ? ' press left to focus selected values' : ''\n        }`;\n      case 'value':\n        return 'Use left and right to toggle between focused values, press Backspace to remove the currently focused value';\n      default:\n        return '';\n    }\n  },\n\n  onChange: <Option extends OptionBase, IsMulti extends boolean>(\n    props: AriaOnChangeProps<Option, IsMulti>\n  ) => {\n    const { action, label = '', labels, isDisabled } = props;\n    switch (action) {\n      case 'deselect-option':\n      case 'pop-value':\n      case 'remove-value':\n        return `option ${label}, deselected.`;\n      case 'clear':\n        return 'All selected options have been cleared.';\n      case 'initial-input-focus':\n        return `option${labels.length > 1 ? 's' : ''} ${labels.join(\n          ','\n        )}, selected.`;\n      case 'select-option':\n        return isDisabled\n          ? `option ${label} is disabled. Select another option.`\n          : `option ${label}, selected.`;\n      default:\n        return '';\n    }\n  },\n\n  onFocus: <Option extends OptionBase, Group extends GroupBase<Option>>(\n    props: AriaOnFocusProps<Option, Group>\n  ) => {\n    const {\n      context,\n      focused,\n      options,\n      label = '',\n      selectValue,\n      isDisabled,\n      isSelected,\n    } = props;\n\n    const getArrayIndex = (arr: OptionsOrGroups<Option, Group>, item: Option) =>\n      arr && arr.length ? `${arr.indexOf(item) + 1} of ${arr.length}` : '';\n\n    if (context === 'value' && selectValue) {\n      return `value ${label} focused, ${getArrayIndex(selectValue, focused)}.`;\n    }\n\n    if (context === 'menu') {\n      const disabled = isDisabled ? ' disabled' : '';\n      const status = `${isSelected ? 'selected' : 'focused'}${disabled}`;\n      return `option ${label} ${status}, ${getArrayIndex(options, focused)}.`;\n    }\n    return '';\n  },\n\n  onFilter: (props: AriaOnFilterProps) => {\n    const { inputValue, resultsMessage } = props;\n    return `${resultsMessage}${\n      inputValue ? ' for search term ' + inputValue : ''\n    }.`;\n  },\n};\n","/** @jsx jsx */\nimport React, { ReactNode, useMemo } from 'react';\nimport { jsx } from '@emotion/react';\nimport A11yText from '../internal/A11yText';\nimport { defaultAriaLiveMessages, AriaSelection } from '../accessibility';\n\nimport {\n  CommonProps,\n  GroupBase,\n  OnChangeValue,\n  OptionBase,\n  Options,\n} from '../types';\n\n// ==============================\n// Root Container\n// ==============================\n\nexport interface LiveRegionProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> extends CommonProps<Option, IsMulti, Group> {\n  children: ReactNode;\n  innerProps: { className?: string };\n  // Select state variables\n  ariaSelection: AriaSelection<Option, IsMulti>;\n  focusedOption: Option | null;\n  focusedValue: Option | null;\n  selectValue: Options<Option>;\n  focusableOptions: Options<Option>;\n  isFocused: boolean;\n  id: string;\n}\n\nconst LiveRegion = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: LiveRegionProps<Option, IsMulti, Group>\n) => {\n  const {\n    ariaSelection,\n    focusedOption,\n    focusedValue,\n    focusableOptions,\n    isFocused,\n    selectValue,\n    selectProps,\n    id,\n  } = props;\n\n  const {\n    ariaLiveMessages,\n    getOptionLabel,\n    inputValue,\n    isMulti,\n    isOptionDisabled,\n    isSearchable,\n    menuIsOpen,\n    options,\n    screenReaderStatus,\n    tabSelectsValue,\n  } = selectProps;\n  const ariaLabel = selectProps['aria-label'];\n  const ariaLive = selectProps['aria-live'];\n\n  // Update aria live message configuration when prop changes\n  const messages = useMemo(\n    () => ({\n      ...defaultAriaLiveMessages,\n      ...(ariaLiveMessages || {}),\n    }),\n    [ariaLiveMessages]\n  );\n\n  // Update aria live selected option when prop changes\n  const ariaSelected = useMemo(() => {\n    let message = '';\n    if (ariaSelection && messages.onChange) {\n      const {\n        option,\n        options: selectedOptions,\n        removedValue,\n        removedValues,\n        value,\n      } = ariaSelection;\n      // select-option when !isMulti does not return option so we assume selected option is value\n      const asOption = (val: OnChangeValue<Option, IsMulti>): Option | null =>\n        !Array.isArray(val) ? (val as Option) : null;\n\n      // If there is just one item from the action then get its label\n      const selected = removedValue || option || asOption(value);\n      const label = selected ? getOptionLabel(selected) : '';\n\n      // If there are multiple items from the action then return an array of labels\n      const multiSelected = selectedOptions || removedValues || undefined;\n      const labels = multiSelected ? multiSelected.map(getOptionLabel) : [];\n\n      const onChangeProps = {\n        // multiSelected items are usually items that have already been selected\n        // or set by the user as a default value so we assume they are not disabled\n        isDisabled: selected && isOptionDisabled(selected, selectValue),\n        label,\n        labels,\n        ...ariaSelection,\n      };\n\n      message = messages.onChange(onChangeProps);\n    }\n    return message;\n  }, [ariaSelection, messages, isOptionDisabled, selectValue, getOptionLabel]);\n\n  const ariaFocused = useMemo(() => {\n    let focusMsg = '';\n    const focused = focusedOption || focusedValue;\n    const isSelected = !!(\n      focusedOption &&\n      selectValue &&\n      selectValue.includes(focusedOption)\n    );\n\n    if (focused && messages.onFocus) {\n      const onFocusProps = {\n        focused,\n        label: getOptionLabel(focused),\n        isDisabled: isOptionDisabled(focused, selectValue),\n        isSelected,\n        options,\n        context:\n          focused === focusedOption ? ('menu' as const) : ('value' as const),\n        selectValue,\n      };\n\n      focusMsg = messages.onFocus(onFocusProps);\n    }\n    return focusMsg;\n  }, [\n    focusedOption,\n    focusedValue,\n    getOptionLabel,\n    isOptionDisabled,\n    messages,\n    options,\n    selectValue,\n  ]);\n\n  const ariaResults = useMemo(() => {\n    let resultsMsg = '';\n    if (menuIsOpen && options.length && messages.onFilter) {\n      const resultsMessage = screenReaderStatus({\n        count: focusableOptions.length,\n      });\n      resultsMsg = messages.onFilter({ inputValue, resultsMessage });\n    }\n    return resultsMsg;\n  }, [\n    focusableOptions,\n    inputValue,\n    menuIsOpen,\n    messages,\n    options,\n    screenReaderStatus,\n  ]);\n\n  const ariaGuidance = useMemo(() => {\n    let guidanceMsg = '';\n    if (messages.guidance) {\n      const context = focusedValue ? 'value' : menuIsOpen ? 'menu' : 'input';\n      guidanceMsg = messages.guidance({\n        'aria-label': ariaLabel,\n        context,\n        isDisabled:\n          focusedOption && isOptionDisabled(focusedOption, selectValue),\n        isMulti,\n        isSearchable,\n        tabSelectsValue,\n      });\n    }\n    return guidanceMsg;\n  }, [\n    ariaLabel,\n    focusedOption,\n    focusedValue,\n    isMulti,\n    isOptionDisabled,\n    isSearchable,\n    menuIsOpen,\n    messages,\n    selectValue,\n    tabSelectsValue,\n  ]);\n\n  const ariaContext = `${ariaFocused} ${ariaResults} ${ariaGuidance}`;\n\n  const ScreenReaderText = (\n    <React.Fragment>\n      <span id=\"aria-selection\">{ariaSelected}</span>\n      <span id=\"aria-context\">{ariaContext}</span>\n    </React.Fragment>\n  );\n\n  const isInitialFocus = ariaSelection?.action === 'initial-input-focus';\n\n  return (\n    <React.Fragment>\n      {/* We use 'aria-describedby' linked to this component for the initial focus */}\n      {/* action, then for all other actions we use the live region below */}\n      <A11yText id={id}>{isInitialFocus && ScreenReaderText}</A11yText>\n      <A11yText\n        aria-live={ariaLive}\n        aria-atomic=\"false\"\n        aria-relevant=\"additions text\"\n      >\n        {isFocused && !isInitialFocus && ScreenReaderText}\n      </A11yText>\n    </React.Fragment>\n  );\n};\n\nexport default LiveRegion;\n","const diacritics = [\n  {\n    base: 'A',\n    letters:\n      '\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F',\n  },\n  { base: 'AA', letters: '\\uA732' },\n  { base: 'AE', letters: '\\u00C6\\u01FC\\u01E2' },\n  { base: 'AO', letters: '\\uA734' },\n  { base: 'AU', letters: '\\uA736' },\n  { base: 'AV', letters: '\\uA738\\uA73A' },\n  { base: 'AY', letters: '\\uA73C' },\n  {\n    base: 'B',\n    letters: '\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181',\n  },\n  {\n    base: 'C',\n    letters:\n      '\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E',\n  },\n  {\n    base: 'D',\n    letters:\n      '\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779',\n  },\n  { base: 'DZ', letters: '\\u01F1\\u01C4' },\n  { base: 'Dz', letters: '\\u01F2\\u01C5' },\n  {\n    base: 'E',\n    letters:\n      '\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E',\n  },\n  { base: 'F', letters: '\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B' },\n  {\n    base: 'G',\n    letters:\n      '\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E',\n  },\n  {\n    base: 'H',\n    letters:\n      '\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D',\n  },\n  {\n    base: 'I',\n    letters:\n      '\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197',\n  },\n  { base: 'J', letters: '\\u004A\\u24BF\\uFF2A\\u0134\\u0248' },\n  {\n    base: 'K',\n    letters:\n      '\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2',\n  },\n  {\n    base: 'L',\n    letters:\n      '\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780',\n  },\n  { base: 'LJ', letters: '\\u01C7' },\n  { base: 'Lj', letters: '\\u01C8' },\n  { base: 'M', letters: '\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C' },\n  {\n    base: 'N',\n    letters:\n      '\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4',\n  },\n  { base: 'NJ', letters: '\\u01CA' },\n  { base: 'Nj', letters: '\\u01CB' },\n  {\n    base: 'O',\n    letters:\n      '\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C',\n  },\n  { base: 'OI', letters: '\\u01A2' },\n  { base: 'OO', letters: '\\uA74E' },\n  { base: 'OU', letters: '\\u0222' },\n  {\n    base: 'P',\n    letters: '\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754',\n  },\n  { base: 'Q', letters: '\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A' },\n  {\n    base: 'R',\n    letters:\n      '\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782',\n  },\n  {\n    base: 'S',\n    letters:\n      '\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784',\n  },\n  {\n    base: 'T',\n    letters:\n      '\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786',\n  },\n  { base: 'TZ', letters: '\\uA728' },\n  {\n    base: 'U',\n    letters:\n      '\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244',\n  },\n  { base: 'V', letters: '\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245' },\n  { base: 'VY', letters: '\\uA760' },\n  {\n    base: 'W',\n    letters: '\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72',\n  },\n  { base: 'X', letters: '\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C' },\n  {\n    base: 'Y',\n    letters:\n      '\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE',\n  },\n  {\n    base: 'Z',\n    letters:\n      '\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762',\n  },\n  {\n    base: 'a',\n    letters:\n      '\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250',\n  },\n  { base: 'aa', letters: '\\uA733' },\n  { base: 'ae', letters: '\\u00E6\\u01FD\\u01E3' },\n  { base: 'ao', letters: '\\uA735' },\n  { base: 'au', letters: '\\uA737' },\n  { base: 'av', letters: '\\uA739\\uA73B' },\n  { base: 'ay', letters: '\\uA73D' },\n  {\n    base: 'b',\n    letters: '\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253',\n  },\n  {\n    base: 'c',\n    letters:\n      '\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184',\n  },\n  {\n    base: 'd',\n    letters:\n      '\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A',\n  },\n  { base: 'dz', letters: '\\u01F3\\u01C6' },\n  {\n    base: 'e',\n    letters:\n      '\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD',\n  },\n  { base: 'f', letters: '\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C' },\n  {\n    base: 'g',\n    letters:\n      '\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F',\n  },\n  {\n    base: 'h',\n    letters:\n      '\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265',\n  },\n  { base: 'hv', letters: '\\u0195' },\n  {\n    base: 'i',\n    letters:\n      '\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131',\n  },\n  { base: 'j', letters: '\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249' },\n  {\n    base: 'k',\n    letters:\n      '\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3',\n  },\n  {\n    base: 'l',\n    letters:\n      '\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747',\n  },\n  { base: 'lj', letters: '\\u01C9' },\n  { base: 'm', letters: '\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F' },\n  {\n    base: 'n',\n    letters:\n      '\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5',\n  },\n  { base: 'nj', letters: '\\u01CC' },\n  {\n    base: 'o',\n    letters:\n      '\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275',\n  },\n  { base: 'oi', letters: '\\u01A3' },\n  { base: 'ou', letters: '\\u0223' },\n  { base: 'oo', letters: '\\uA74F' },\n  {\n    base: 'p',\n    letters: '\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755',\n  },\n  { base: 'q', letters: '\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759' },\n  {\n    base: 'r',\n    letters:\n      '\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783',\n  },\n  {\n    base: 's',\n    letters:\n      '\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B',\n  },\n  {\n    base: 't',\n    letters:\n      '\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787',\n  },\n  { base: 'tz', letters: '\\uA729' },\n  {\n    base: 'u',\n    letters:\n      '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289',\n  },\n  { base: 'v', letters: '\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C' },\n  { base: 'vy', letters: '\\uA761' },\n  {\n    base: 'w',\n    letters:\n      '\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73',\n  },\n  { base: 'x', letters: '\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D' },\n  {\n    base: 'y',\n    letters:\n      '\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF',\n  },\n  {\n    base: 'z',\n    letters:\n      '\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763',\n  },\n];\n\nconst anyDiacritic = new RegExp(\n  '[' + diacritics.map((d) => d.letters).join('') + ']',\n  'g'\n);\nconst diacriticToBase: { [letters: string]: string } = {};\n\nfor (let i = 0; i < diacritics.length; i++) {\n  let diacritic = diacritics[i];\n  for (let j = 0; j < diacritic.letters.length; j++) {\n    diacriticToBase[diacritic.letters[j]] = diacritic.base;\n  }\n}\n\nexport const stripDiacritics = (str: string) => {\n  return str.replace(anyDiacritic, (match) => diacriticToBase[match]);\n};\n","import memoizeOne from 'memoize-one';\nimport { stripDiacritics } from './diacritics';\nimport { OptionBase } from './types';\n\nexport interface FilterOptionOption<Option extends OptionBase> {\n  readonly label: string;\n  readonly value: string;\n  readonly data: Option;\n}\n\ninterface Config<Option extends OptionBase> {\n  readonly ignoreCase?: boolean;\n  readonly ignoreAccents?: boolean;\n  readonly stringify?: (option: FilterOptionOption<Option>) => string;\n  readonly trim?: boolean;\n  readonly matchFrom?: 'any' | 'start';\n}\n\nconst memoizedStripDiacriticsForInput = memoizeOne(stripDiacritics);\n\nconst trimString = (str: string) => str.replace(/^\\s+|\\s+$/g, '');\nconst defaultStringify = <Option extends OptionBase>(\n  option: FilterOptionOption<Option>\n) => `${option.label} ${option.value}`;\n\nexport const createFilter =\n  <Option extends OptionBase>(config?: Config<Option>) =>\n  (option: FilterOptionOption<Option>, rawInput: string): boolean => {\n    // eslint-disable-next-line no-underscore-dangle\n    if (option.data.__isNew__) return true;\n    const { ignoreCase, ignoreAccents, stringify, trim, matchFrom } = {\n      ignoreCase: true,\n      ignoreAccents: true,\n      stringify: defaultStringify,\n      trim: true,\n      matchFrom: 'any',\n      ...config,\n    };\n    let input = trim ? trimString(rawInput) : rawInput;\n    let candidate = trim ? trimString(stringify(option)) : stringify(option);\n    if (ignoreCase) {\n      input = input.toLowerCase();\n      candidate = candidate.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = memoizedStripDiacriticsForInput(input);\n      candidate = stripDiacritics(candidate);\n    }\n    return matchFrom === 'start'\n      ? candidate.substr(0, input.length) === input\n      : candidate.indexOf(input) > -1;\n  };\n","/** @jsx jsx */\nimport { Ref } from 'react';\nimport { jsx } from '@emotion/react';\n\nexport default function DummyInput({\n  innerRef,\n  ...props\n}: JSX.IntrinsicElements['input'] & {\n  readonly innerRef: Ref<HTMLInputElement>;\n}) {\n  return (\n    <input\n      ref={innerRef}\n      {...props}\n      css={{\n        label: 'dummyInput',\n        // get rid of any default styles\n        background: 0,\n        border: 0,\n        // important! this hides the flashing cursor\n        caretColor: 'transparent',\n        fontSize: 'inherit',\n        outline: 0,\n        padding: 0,\n        // important! without `width` browsers won't allow focus\n        width: 1,\n\n        // remove cursor on desktop\n        color: 'transparent',\n\n        // remove cursor on mobile whilst maintaining \"scroll into view\" behaviour\n        left: -100,\n        opacity: 0,\n        position: 'relative',\n        transform: 'scale(.01)',\n      }}\n    />\n  );\n}\n","import { useCallback, useEffect, useRef } from 'react';\nimport { supportsPassiveEvents } from '../utils';\n\nconst cancelScroll = (event: WheelEvent | TouchEvent) => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\ninterface Options {\n  readonly isEnabled: boolean;\n  readonly onBottomArrive?: (event: WheelEvent | TouchEvent) => void;\n  readonly onBottomLeave?: (event: WheelEvent | TouchEvent) => void;\n  readonly onTopArrive?: (event: WheelEvent | TouchEvent) => void;\n  readonly onTopLeave?: (event: WheelEvent | TouchEvent) => void;\n}\n\nexport default function useScrollCapture({\n  isEnabled,\n  onBottomArrive,\n  onBottomLeave,\n  onTopArrive,\n  onTopLeave,\n}: Options) {\n  const isBottom = useRef(false);\n  const isTop = useRef(false);\n  const touchStart = useRef(0);\n  const scrollTarget = useRef<HTMLElement | null>(null);\n\n  const handleEventDelta = useCallback(\n    (event: WheelEvent | TouchEvent, delta: number) => {\n      if (scrollTarget.current === null) return;\n\n      const { scrollTop, scrollHeight, clientHeight } = scrollTarget.current;\n      const target = scrollTarget.current;\n      const isDeltaPositive = delta > 0;\n      const availableScroll = scrollHeight - clientHeight - scrollTop;\n      let shouldCancelScroll = false;\n\n      // reset bottom/top flags\n      if (availableScroll > delta && isBottom.current) {\n        if (onBottomLeave) onBottomLeave(event);\n        isBottom.current = false;\n      }\n      if (isDeltaPositive && isTop.current) {\n        if (onTopLeave) onTopLeave(event);\n        isTop.current = false;\n      }\n\n      // bottom limit\n      if (isDeltaPositive && delta > availableScroll) {\n        if (onBottomArrive && !isBottom.current) {\n          onBottomArrive(event);\n        }\n        target.scrollTop = scrollHeight;\n        shouldCancelScroll = true;\n        isBottom.current = true;\n\n        // top limit\n      } else if (!isDeltaPositive && -delta > scrollTop) {\n        if (onTopArrive && !isTop.current) {\n          onTopArrive(event);\n        }\n        target.scrollTop = 0;\n        shouldCancelScroll = true;\n        isTop.current = true;\n      }\n\n      // cancel scroll\n      if (shouldCancelScroll) {\n        cancelScroll(event);\n      }\n    },\n    [onBottomArrive, onBottomLeave, onTopArrive, onTopLeave]\n  );\n\n  const onWheel = useCallback(\n    (event: WheelEvent) => {\n      handleEventDelta(event, event.deltaY);\n    },\n    [handleEventDelta]\n  );\n  const onTouchStart = useCallback((event: TouchEvent) => {\n    // set touch start so we can calculate touchmove delta\n    touchStart.current = event.changedTouches[0].clientY;\n  }, []);\n  const onTouchMove = useCallback(\n    (event: TouchEvent) => {\n      const deltaY = touchStart.current - event.changedTouches[0].clientY;\n      handleEventDelta(event, deltaY);\n    },\n    [handleEventDelta]\n  );\n\n  const startListening = useCallback(\n    (el) => {\n      // bail early if no element is available to attach to\n      if (!el) return;\n\n      const notPassive = supportsPassiveEvents ? { passive: false } : false;\n      el.addEventListener('wheel', onWheel, notPassive);\n      el.addEventListener('touchstart', onTouchStart, notPassive);\n      el.addEventListener('touchmove', onTouchMove, notPassive);\n    },\n    [onTouchMove, onTouchStart, onWheel]\n  );\n\n  const stopListening = useCallback(\n    (el) => {\n      // bail early if no element is available to detach from\n      if (!el) return;\n\n      el.removeEventListener('wheel', onWheel, false);\n      el.removeEventListener('touchstart', onTouchStart, false);\n      el.removeEventListener('touchmove', onTouchMove, false);\n    },\n    [onTouchMove, onTouchStart, onWheel]\n  );\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const element = scrollTarget.current;\n    startListening(element);\n\n    return () => {\n      stopListening(element);\n    };\n  }, [isEnabled, startListening, stopListening]);\n\n  return (element: HTMLElement | null) => {\n    scrollTarget.current = element;\n  };\n}\n","import { useCallback, useEffect, useRef } from 'react';\n\nconst STYLE_KEYS = [\n  'boxSizing',\n  'height',\n  'overflow',\n  'paddingRight',\n  'position',\n] as const;\n\nconst LOCK_STYLES = {\n  boxSizing: 'border-box', // account for possible declaration `width: 100%;` on body\n  overflow: 'hidden',\n  position: 'relative',\n  height: '100%',\n};\n\nfunction preventTouchMove(e: TouchEvent) {\n  e.preventDefault();\n}\n\nfunction allowTouchMove(e: TouchEvent) {\n  e.stopPropagation();\n}\n\nfunction preventInertiaScroll(this: HTMLElement) {\n  const top = this.scrollTop;\n  const totalScroll = this.scrollHeight;\n  const currentScroll = top + this.offsetHeight;\n\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n}\n\n// `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\nfunction isTouchDevice() {\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet activeScrollLocks = 0;\n\ninterface Options {\n  readonly isEnabled: boolean;\n  readonly accountForScrollbars?: boolean;\n}\n\nconst listenerOptions = {\n  capture: false,\n  passive: false,\n};\n\nexport default function useScrollLock({\n  isEnabled,\n  accountForScrollbars = true,\n}: Options) {\n  const originalStyles = useRef<{ [key: string]: string }>({});\n  const scrollTarget = useRef<HTMLElement | null>(null);\n\n  const addScrollLock = useCallback(\n    (touchScrollTarget: HTMLElement | null) => {\n      if (!canUseDOM) return;\n\n      const target = document.body;\n      const targetStyle = target && target.style;\n\n      if (accountForScrollbars) {\n        // store any styles already applied to the body\n        STYLE_KEYS.forEach((key) => {\n          const val = targetStyle && targetStyle[key];\n          originalStyles.current[key] = val;\n        });\n      }\n\n      // apply the lock styles and padding if this is the first scroll lock\n      if (accountForScrollbars && activeScrollLocks < 1) {\n        const currentPadding =\n          parseInt(originalStyles.current.paddingRight, 10) || 0;\n        const clientWidth = document.body ? document.body.clientWidth : 0;\n        const adjustedPadding =\n          window.innerWidth - clientWidth + currentPadding || 0;\n\n        Object.keys(LOCK_STYLES).forEach((key) => {\n          const val = LOCK_STYLES[key as keyof typeof LOCK_STYLES];\n          if (targetStyle) {\n            targetStyle[key as keyof typeof LOCK_STYLES] = val;\n          }\n        });\n\n        if (targetStyle) {\n          targetStyle.paddingRight = `${adjustedPadding}px`;\n        }\n      }\n\n      // account for touch devices\n      if (target && isTouchDevice()) {\n        // Mobile Safari ignores { overflow: hidden } declaration on the body.\n        target.addEventListener('touchmove', preventTouchMove, listenerOptions);\n\n        // Allow scroll on provided target\n        if (touchScrollTarget) {\n          touchScrollTarget.addEventListener(\n            'touchstart',\n            preventInertiaScroll,\n            listenerOptions\n          );\n          touchScrollTarget.addEventListener(\n            'touchmove',\n            allowTouchMove,\n            listenerOptions\n          );\n        }\n      }\n\n      // increment active scroll locks\n      activeScrollLocks += 1;\n    },\n    [accountForScrollbars]\n  );\n\n  const removeScrollLock = useCallback(\n    (touchScrollTarget: HTMLElement | null) => {\n      if (!canUseDOM) return;\n\n      const target = document.body;\n      const targetStyle = target && target.style;\n\n      // safely decrement active scroll locks\n      activeScrollLocks = Math.max(activeScrollLocks - 1, 0);\n\n      // reapply original body styles, if any\n      if (accountForScrollbars && activeScrollLocks < 1) {\n        STYLE_KEYS.forEach((key) => {\n          const val = originalStyles.current[key];\n          if (targetStyle) {\n            targetStyle[key] = val;\n          }\n        });\n      }\n\n      // remove touch listeners\n      if (target && isTouchDevice()) {\n        target.removeEventListener(\n          'touchmove',\n          preventTouchMove,\n          listenerOptions\n        );\n\n        if (touchScrollTarget) {\n          touchScrollTarget.removeEventListener(\n            'touchstart',\n            preventInertiaScroll,\n            listenerOptions\n          );\n          touchScrollTarget.removeEventListener(\n            'touchmove',\n            allowTouchMove,\n            listenerOptions\n          );\n        }\n      }\n    },\n    [accountForScrollbars]\n  );\n\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    const element = scrollTarget.current;\n    addScrollLock(element);\n\n    return () => {\n      removeScrollLock(element);\n    };\n  }, [isEnabled, addScrollLock, removeScrollLock]);\n\n  return (element: HTMLElement | null) => {\n    scrollTarget.current = element;\n  };\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactElement, RefCallback } from 'react';\nimport useScrollCapture from './useScrollCapture';\nimport useScrollLock from './useScrollLock';\n\ninterface Props {\n  readonly children: (ref: RefCallback<HTMLElement>) => ReactElement;\n  readonly lockEnabled: boolean;\n  readonly captureEnabled: boolean;\n  readonly onBottomArrive?: (event: WheelEvent | TouchEvent) => void;\n  readonly onBottomLeave?: (event: WheelEvent | TouchEvent) => void;\n  readonly onTopArrive?: (event: WheelEvent | TouchEvent) => void;\n  readonly onTopLeave?: (event: WheelEvent | TouchEvent) => void;\n}\n\nconst blurSelectInput = () =>\n  document.activeElement && (document.activeElement as HTMLElement).blur();\n\nexport default function ScrollManager({\n  children,\n  lockEnabled,\n  captureEnabled = true,\n  onBottomArrive,\n  onBottomLeave,\n  onTopArrive,\n  onTopLeave,\n}: Props) {\n  const setScrollCaptureTarget = useScrollCapture({\n    isEnabled: captureEnabled,\n    onBottomArrive,\n    onBottomLeave,\n    onTopArrive,\n    onTopLeave,\n  });\n  const setScrollLockTarget = useScrollLock({ isEnabled: lockEnabled });\n\n  const targetRef: RefCallback<HTMLElement> = (element) => {\n    setScrollCaptureTarget(element);\n    setScrollLockTarget(element);\n  };\n\n  return (\n    <React.Fragment>\n      {lockEnabled && (\n        <div\n          onClick={blurSelectInput}\n          css={{ position: 'fixed', left: 0, bottom: 0, right: 0, top: 0 }}\n        />\n      )}\n      {children(targetRef)}\n    </React.Fragment>\n  );\n}\n","import { GroupBase, OptionBase } from './types';\n\nexport const formatGroupLabel = <\n  Option extends OptionBase,\n  Group extends GroupBase<Option>\n>(\n  group: Group\n): string => group.label as string;\n\nexport const getOptionLabel = <Option extends OptionBase>(\n  option: Option\n): string => option.label as string;\n\nexport const getOptionValue = <Option extends OptionBase>(\n  option: Option\n): string => option.value as string;\n\nexport const isOptionDisabled = <Option extends OptionBase>(\n  option: Option\n): boolean => !!option.isDisabled;\n","/** @jsx jsx */\nimport { ReactNode } from 'react';\nimport { jsx } from '@emotion/react';\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\n\n// ==============================\n// Root Container\n// ==============================\n\nexport interface ContainerProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** Whether the select is disabled. */\n  isDisabled: boolean;\n  isFocused: boolean;\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** Inner props to be passed down to the container. */\n  innerProps: JSX.IntrinsicElements['div'];\n}\nexport const containerCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isDisabled,\n  isRtl,\n}: ContainerProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'container',\n  direction: isRtl ? 'rtl' : undefined,\n  pointerEvents: isDisabled ? 'none' : undefined, // cancel mouse events when disabled\n  position: 'relative',\n});\nexport const SelectContainer = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: ContainerProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps, isDisabled, isRtl } =\n    props;\n  return (\n    <div\n      css={getStyles('container', props)}\n      className={cx(\n        {\n          '--is-disabled': isDisabled,\n          '--is-rtl': isRtl,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\n// ==============================\n// Value Container\n// ==============================\n\nexport interface ValueContainerProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** Props to be passed to the value container element. */\n  innerProps?: JSX.IntrinsicElements['div'];\n  /** The children to be rendered. */\n  children: ReactNode;\n  isDisabled: boolean;\n}\nexport const valueContainerCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { spacing },\n}: ValueContainerProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  alignItems: 'center',\n  display: 'flex',\n  flex: 1,\n  flexWrap: 'wrap',\n  padding: `${spacing.baseUnit / 2}px ${spacing.baseUnit * 2}px`,\n  WebkitOverflowScrolling: 'touch',\n  position: 'relative',\n  overflow: 'hidden',\n});\nexport const ValueContainer = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: ValueContainerProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, innerProps, isMulti, getStyles, hasValue } =\n    props;\n\n  return (\n    <div\n      css={getStyles('valueContainer', props)}\n      className={cx(\n        {\n          'value-container': true,\n          'value-container--is-multi': isMulti,\n          'value-container--has-value': hasValue,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\n// ==============================\n// Indicator Container\n// ==============================\n\nexport interface IndicatorsContainerProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  isDisabled: boolean;\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** Props to be passed to the indicators container element. */\n  innerProps?: {};\n}\n\nexport const indicatorsContainerCSS = (): CSSObjectWithLabel => ({\n  alignItems: 'center',\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexShrink: 0,\n});\nexport const IndicatorsContainer = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: IndicatorsContainerProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, innerProps, getStyles } = props;\n\n  return (\n    <div\n      css={getStyles('indicatorsContainer', props)}\n      className={cx(\n        {\n          indicators: true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n","/** @jsx jsx */\nimport { ReactNode } from 'react';\nimport { jsx, keyframes } from '@emotion/react';\n\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\n\n// ==============================\n// Dropdown & Clear Icons\n// ==============================\n\nconst Svg = ({\n  size,\n  ...props\n}: JSX.IntrinsicElements['svg'] & { size: number }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 20 20\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    css={{\n      display: 'inline-block',\n      fill: 'currentColor',\n      lineHeight: 1,\n      stroke: 'currentColor',\n      strokeWidth: 0,\n    }}\n    {...props}\n  />\n);\n\nexport type CrossIconProps = JSX.IntrinsicElements['svg'] & { size?: number };\nexport const CrossIcon = (props: CrossIconProps) => (\n  <Svg size={20} {...props}>\n    <path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\" />\n  </Svg>\n);\nexport type DownChevronProps = JSX.IntrinsicElements['svg'] & { size?: number };\nexport const DownChevron = (props: DownChevronProps) => (\n  <Svg size={20} {...props}>\n    <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n  </Svg>\n);\n\n// ==============================\n// Dropdown & Clear Buttons\n// ==============================\n\nexport interface DropdownIndicatorProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered inside the indicator. */\n  children?: ReactNode;\n  /** Props that will be passed on to the children. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** The focused state of the select. */\n  isFocused: boolean;\n  isDisabled: boolean;\n}\n\nconst baseCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isFocused,\n  theme: {\n    spacing: { baseUnit },\n    colors,\n  },\n}:\n  | DropdownIndicatorProps<Option, IsMulti, Group>\n  | ClearIndicatorProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'indicatorContainer',\n  color: isFocused ? colors.neutral60 : colors.neutral20,\n  display: 'flex',\n  padding: baseUnit * 2,\n  transition: 'color 150ms',\n\n  ':hover': {\n    color: isFocused ? colors.neutral80 : colors.neutral40,\n  },\n});\n\nexport const dropdownIndicatorCSS = baseCSS;\nexport const DropdownIndicator = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: DropdownIndicatorProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps } = props;\n  return (\n    <div\n      css={getStyles('dropdownIndicator', props)}\n      className={cx(\n        {\n          indicator: true,\n          'dropdown-indicator': true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children || <DownChevron />}\n    </div>\n  );\n};\n\nexport interface ClearIndicatorProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered inside the indicator. */\n  children?: ReactNode;\n  /** Props that will be passed on to the children. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** The focused state of the select. */\n  isFocused: boolean;\n}\n\nexport const clearIndicatorCSS = baseCSS;\nexport const ClearIndicator = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: ClearIndicatorProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps } = props;\n  return (\n    <div\n      css={getStyles('clearIndicator', props)}\n      className={cx(\n        {\n          indicator: true,\n          'clear-indicator': true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children || <CrossIcon />}\n    </div>\n  );\n};\n\n// ==============================\n// Separator\n// ==============================\n\nexport interface IndicatorSeparatorProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  isDisabled: boolean;\n  isFocused: boolean;\n  innerProps?: JSX.IntrinsicElements['span'];\n}\n\nexport const indicatorSeparatorCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isDisabled,\n  theme: {\n    spacing: { baseUnit },\n    colors,\n  },\n}: IndicatorSeparatorProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'indicatorSeparator',\n  alignSelf: 'stretch',\n  backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,\n  marginBottom: baseUnit * 2,\n  marginTop: baseUnit * 2,\n  width: 1,\n});\n\nexport const IndicatorSeparator = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: IndicatorSeparatorProps<Option, IsMulti, Group>\n) => {\n  const { className, cx, getStyles, innerProps } = props;\n  return (\n    <span\n      {...innerProps}\n      css={getStyles('indicatorSeparator', props)}\n      className={cx({ 'indicator-separator': true }, className)}\n    />\n  );\n};\n\n// ==============================\n// Loading\n// ==============================\n\nconst loadingDotAnimations = keyframes`\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n`;\n\nexport const loadingIndicatorCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isFocused,\n  size,\n  theme: {\n    colors,\n    spacing: { baseUnit },\n  },\n}: LoadingIndicatorProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'loadingIndicator',\n  color: isFocused ? colors.neutral60 : colors.neutral20,\n  display: 'flex',\n  padding: baseUnit * 2,\n  transition: 'color 150ms',\n  alignSelf: 'center',\n  fontSize: size,\n  lineHeight: 1,\n  marginRight: size,\n  textAlign: 'center',\n  verticalAlign: 'middle',\n});\n\ninterface LoadingDotProps {\n  delay: number;\n  offset: boolean;\n}\nconst LoadingDot = ({ delay, offset }: LoadingDotProps) => (\n  <span\n    css={{\n      animation: `${loadingDotAnimations} 1s ease-in-out ${delay}ms infinite;`,\n      backgroundColor: 'currentColor',\n      borderRadius: '1em',\n      display: 'inline-block',\n      marginLeft: offset ? '1em' : undefined,\n      height: '1em',\n      verticalAlign: 'top',\n      width: '1em',\n    }}\n  />\n);\n\nexport interface LoadingIndicatorProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** Props that will be passed on to the children. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** The focused state of the select. */\n  isFocused: boolean;\n  isDisabled: boolean;\n  /** Set size of the container. */\n  size: number;\n}\nexport const LoadingIndicator = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: LoadingIndicatorProps<Option, IsMulti, Group>\n) => {\n  const { className, cx, getStyles, innerProps, isRtl } = props;\n\n  return (\n    <div\n      css={getStyles('loadingIndicator', props)}\n      className={cx(\n        {\n          indicator: true,\n          'loading-indicator': true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      <LoadingDot delay={0} offset={isRtl} />\n      <LoadingDot delay={160} offset />\n      <LoadingDot delay={320} offset={!isRtl} />\n    </div>\n  );\n};\nLoadingIndicator.defaultProps = { size: 4 };\n","/** @jsx jsx */\nimport { ReactNode, Ref } from 'react';\nimport { jsx } from '@emotion/react';\n\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\n\nexport interface ControlProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** Children to render. */\n  children: ReactNode;\n  innerRef: Ref<HTMLDivElement>;\n  /** The mouse down event and the innerRef to pass down to the controller element. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** Whether the select is disabled. */\n  isDisabled: boolean;\n  /** Whether the select is focused. */\n  isFocused: boolean;\n  /** Whether the select is expanded. */\n  menuIsOpen: boolean;\n}\n\nexport const css = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isDisabled,\n  isFocused,\n  theme: { colors, borderRadius, spacing },\n}: ControlProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'control',\n  alignItems: 'center',\n  backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,\n  borderColor: isDisabled\n    ? colors.neutral10\n    : isFocused\n    ? colors.primary\n    : colors.neutral20,\n  borderRadius: borderRadius,\n  borderStyle: 'solid',\n  borderWidth: 1,\n  boxShadow: isFocused ? `0 0 0 1px ${colors.primary}` : undefined,\n  cursor: 'default',\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-between',\n  minHeight: spacing.controlHeight,\n  outline: '0 !important',\n  position: 'relative',\n  transition: 'all 100ms',\n\n  '&:hover': {\n    borderColor: isFocused ? colors.primary : colors.neutral30,\n  },\n});\n\nconst Control = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: ControlProps<Option, IsMulti, Group>\n) => {\n  const {\n    children,\n    cx,\n    getStyles,\n    className,\n    isDisabled,\n    isFocused,\n    innerRef,\n    innerProps,\n    menuIsOpen,\n  } = props;\n  return (\n    <div\n      ref={innerRef}\n      css={getStyles('control', props)}\n      className={cx(\n        {\n          control: true,\n          'control--is-disabled': isDisabled,\n          'control--is-focused': isFocused,\n          'control--menu-is-open': menuIsOpen,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Control;\n","/** @jsx jsx */\nimport { ComponentType, ReactNode } from 'react';\nimport { jsx } from '@emotion/react';\nimport { cleanCommonProps } from '../utils';\n\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  CX,\n  GetStyles,\n  GroupBase,\n  OptionBase,\n  Options,\n  Theme,\n} from '../types';\nimport { Props } from '../Select';\n\nexport interface ForwardedHeadingProps<\n  Option extends OptionBase,\n  Group extends GroupBase<Option>\n> {\n  id: string;\n  data: Group;\n}\n\nexport interface GroupProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** Component to wrap the label, receives headingProps. */\n  Heading: ComponentType<GroupHeadingProps<Option, IsMulti, Group>>;\n  /** Props to pass to Heading. */\n  headingProps: ForwardedHeadingProps<Option, Group>;\n  /** Props to be passed to the group element. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** Label to be displayed in the heading component. */\n  label: ReactNode;\n  /** The data of the group. */\n  data: Group;\n  options: Options<Option>;\n}\n\nexport const groupCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { spacing },\n}: GroupProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  paddingBottom: spacing.baseUnit * 2,\n  paddingTop: spacing.baseUnit * 2,\n});\n\nconst Group = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: GroupProps<Option, IsMulti, Group>\n) => {\n  const {\n    children,\n    className,\n    cx,\n    getStyles,\n    Heading,\n    headingProps,\n    innerProps,\n    label,\n    theme,\n    selectProps,\n  } = props;\n  return (\n    <div\n      css={getStyles('group', props)}\n      className={cx({ group: true }, className)}\n      {...innerProps}\n    >\n      <Heading\n        {...headingProps}\n        selectProps={selectProps}\n        theme={theme}\n        getStyles={getStyles}\n        cx={cx}\n      >\n        {label}\n      </Heading>\n      <div>{children}</div>\n    </div>\n  );\n};\n\ninterface GroupHeadingPropsDefinedProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> extends ForwardedHeadingProps<Option, Group> {\n  className?: string | undefined;\n  selectProps: Props<Option, IsMulti, Group>;\n  theme: Theme;\n  getStyles: GetStyles<Option, IsMulti, Group>;\n  cx: CX;\n}\n\nexport type GroupHeadingProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = GroupHeadingPropsDefinedProps<Option, IsMulti, Group> &\n  JSX.IntrinsicElements['div'];\n\nexport const groupHeadingCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { spacing },\n}: GroupHeadingProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'group',\n  color: '#999',\n  cursor: 'default',\n  display: 'block',\n  fontSize: '75%',\n  fontWeight: 500,\n  marginBottom: '0.25em',\n  paddingLeft: spacing.baseUnit * 3,\n  paddingRight: spacing.baseUnit * 3,\n  textTransform: 'uppercase',\n});\n\nexport const GroupHeading = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: GroupHeadingProps<Option, IsMulti, Group>\n) => {\n  const { getStyles, cx, className } = props;\n  const { data, ...innerProps } = cleanCommonProps(props);\n  return (\n    <div\n      css={getStyles('groupHeading', props)}\n      className={cx({ 'group-heading': true }, className)}\n      {...innerProps}\n    />\n  );\n};\n\nexport default Group;\n","/** @jsx jsx */\nimport { InputHTMLAttributes } from 'react';\nimport { jsx } from '@emotion/react';\n\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\nimport { cleanCommonProps } from '../utils';\n\nexport interface InputSpecificProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends InputHTMLAttributes<HTMLInputElement>,\n    CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** Reference to the internal element */\n  innerRef?: (instance: HTMLInputElement | null) => void;\n  /** Set whether the input should be visible. Does not affect input size. */\n  isHidden: boolean;\n  /** Whether the input is disabled */\n  isDisabled?: boolean;\n  /** The ID of the form that the input belongs to */\n  form?: string;\n  /** Set className for the input element */\n  inputClassName?: string;\n}\n\nexport type InputProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = InputSpecificProps<Option, IsMulti, Group>;\n\nexport const inputCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isDisabled,\n  theme: { spacing, colors },\n}: InputProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  margin: spacing.baseUnit / 2,\n  paddingBottom: spacing.baseUnit / 2,\n  paddingTop: spacing.baseUnit / 2,\n  visibility: isDisabled ? 'hidden' : 'visible',\n  color: colors.neutral80,\n  ...containerStyle,\n});\n\nconst spacingStyle = {\n  gridArea: '1 / 2',\n  font: 'inherit',\n  minWidth: '2px',\n  border: 0,\n  margin: 0,\n  outline: 0,\n  padding: 0,\n} as const;\n\nconst containerStyle = {\n  flex: '1 1 auto',\n  display: 'inline-grid',\n  gridTemplateColumns: '0 min-content',\n\n  '&:after': {\n    content: 'attr(data-value) \" \"',\n    visibility: 'hidden',\n    whiteSpace: 'nowrap',\n    ...spacingStyle,\n  },\n} as const;\n\nconst inputStyle = (isHidden: boolean) => ({\n  label: 'input',\n  color: 'inherit',\n  background: 0,\n  opacity: isHidden ? 0 : 1,\n  width: '100%',\n  ...spacingStyle,\n});\n\nconst Input = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: InputProps<Option, IsMulti, Group>\n) => {\n  const { className, cx, getStyles, value } = props;\n  const { innerRef, isDisabled, isHidden, inputClassName, ...innerProps } =\n    cleanCommonProps(props);\n\n  return (\n    <div\n      className={cx({ 'input-container': true }, className)}\n      css={getStyles('input', props)}\n      data-value={value || ''}\n    >\n      <input\n        className={cx({ input: true }, inputClassName)}\n        ref={innerRef}\n        style={inputStyle(isHidden)}\n        disabled={isDisabled}\n        {...innerProps}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","/** @jsx jsx */\nimport { ComponentType, ReactNode } from 'react';\nimport { jsx, ClassNames } from '@emotion/react';\nimport { CrossIcon } from './indicators';\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\nimport { Props } from '../Select';\n\ninterface MultiValueComponents<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  Container: ComponentType<MultiValueGenericProps<Option, IsMulti, Group>>;\n  Label: ComponentType<MultiValueGenericProps<Option, IsMulti, Group>>;\n  Remove: ComponentType<MultiValueRemoveProps<Option, IsMulti, Group>>;\n}\n\nexport interface MultiValueProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  children: ReactNode;\n  components: MultiValueComponents<Option, IsMulti, Group>;\n  cropWithEllipsis?: boolean;\n  data: Option;\n  innerProps: JSX.IntrinsicElements['div'];\n  isFocused: boolean;\n  isDisabled: boolean;\n  removeProps: JSX.IntrinsicElements['div'];\n}\n\nexport const multiValueCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { spacing, borderRadius, colors },\n}: MultiValueProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'multiValue',\n  backgroundColor: colors.neutral10,\n  borderRadius: borderRadius / 2,\n  display: 'flex',\n  margin: spacing.baseUnit / 2,\n  minWidth: 0, // resolves flex/text-overflow bug\n});\n\nexport const multiValueLabelCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { borderRadius, colors },\n  cropWithEllipsis,\n}: MultiValueProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  borderRadius: borderRadius / 2,\n  color: colors.neutral80,\n  fontSize: '85%',\n  overflow: 'hidden',\n  padding: 3,\n  paddingLeft: 6,\n  textOverflow:\n    cropWithEllipsis || cropWithEllipsis === undefined ? 'ellipsis' : undefined,\n  whiteSpace: 'nowrap',\n});\n\nexport const multiValueRemoveCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { spacing, borderRadius, colors },\n  isFocused,\n}: MultiValueProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  alignItems: 'center',\n  borderRadius: borderRadius / 2,\n  backgroundColor: isFocused ? colors.dangerLight : undefined,\n  display: 'flex',\n  paddingLeft: spacing.baseUnit,\n  paddingRight: spacing.baseUnit,\n  ':hover': {\n    backgroundColor: colors.dangerLight,\n    color: colors.danger,\n  },\n});\n\nexport interface MultiValueGenericProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> {\n  children: ReactNode;\n  data: any;\n  innerProps: { className?: string };\n  selectProps: Props<Option, IsMulti, Group>;\n}\nexport const MultiValueGeneric = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  children,\n  innerProps,\n}: MultiValueGenericProps<Option, IsMulti, Group>) => (\n  <div {...innerProps}>{children}</div>\n);\n\nexport const MultiValueContainer = MultiValueGeneric;\nexport const MultiValueLabel = MultiValueGeneric;\nexport interface MultiValueRemoveProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> {\n  children?: ReactNode;\n  data: Option;\n  innerProps: JSX.IntrinsicElements['div'];\n  selectProps: Props<Option, IsMulti, Group>;\n}\nexport function MultiValueRemove<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({ children, innerProps }: MultiValueRemoveProps<Option, IsMulti, Group>) {\n  return (\n    <div role=\"button\" {...innerProps}>\n      {children || <CrossIcon size={14} />}\n    </div>\n  );\n}\n\nconst MultiValue = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: MultiValueProps<Option, IsMulti, Group>\n) => {\n  const {\n    children,\n    className,\n    components,\n    cx,\n    data,\n    getStyles,\n    innerProps,\n    isDisabled,\n    removeProps,\n    selectProps,\n  } = props;\n\n  const { Container, Label, Remove } = components;\n\n  return (\n    <ClassNames>\n      {({ css, cx: emotionCx }) => (\n        <Container\n          data={data}\n          innerProps={{\n            className: emotionCx(\n              css(getStyles('multiValue', props)),\n              cx(\n                {\n                  'multi-value': true,\n                  'multi-value--is-disabled': isDisabled,\n                },\n                className\n              )\n            ),\n            ...innerProps,\n          }}\n          selectProps={selectProps}\n        >\n          <Label\n            data={data}\n            innerProps={{\n              className: emotionCx(\n                css(getStyles('multiValueLabel', props)),\n                cx(\n                  {\n                    'multi-value__label': true,\n                  },\n                  className\n                )\n              ),\n            }}\n            selectProps={selectProps}\n          >\n            {children}\n          </Label>\n          <Remove\n            data={data}\n            innerProps={{\n              className: emotionCx(\n                css(getStyles('multiValueRemove', props)),\n                cx(\n                  {\n                    'multi-value__remove': true,\n                  },\n                  className\n                )\n              ),\n              'aria-label': `Remove ${children || 'option'}`,\n              ...removeProps,\n            }}\n            selectProps={selectProps}\n          />\n        </Container>\n      )}\n    </ClassNames>\n  );\n};\n\nexport default MultiValue;\n","/** @jsx jsx */\nimport { ReactNode, RefCallback } from 'react';\nimport { jsx } from '@emotion/react';\n\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\n\nexport interface OptionProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** Inner ref to DOM Node */\n  innerRef: RefCallback<HTMLDivElement>;\n  /** props passed to the wrapping element for the group. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** Text to be displayed representing the option. */\n  label: string;\n  /** Type is used by the menu to determine whether this is an option or a group.\n    In the case of option this is always `option`. **/\n  type: 'option';\n  /** The data of the selected option. */\n  data: Option;\n  /** Whether the option is disabled. */\n  isDisabled: boolean;\n  /** Whether the option is focused. */\n  isFocused: boolean;\n  /** Whether the option is selected. */\n  isSelected: boolean;\n}\n\nexport const optionCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isDisabled,\n  isFocused,\n  isSelected,\n  theme: { spacing, colors },\n}: OptionProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'option',\n  backgroundColor: isSelected\n    ? colors.primary\n    : isFocused\n    ? colors.primary25\n    : 'transparent',\n  color: isDisabled\n    ? colors.neutral20\n    : isSelected\n    ? colors.neutral0\n    : 'inherit',\n  cursor: 'default',\n  display: 'block',\n  fontSize: 'inherit',\n  padding: `${spacing.baseUnit * 2}px ${spacing.baseUnit * 3}px`,\n  width: '100%',\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n\n  // provide some affordance on touch devices\n  ':active': {\n    backgroundColor: !isDisabled\n      ? isSelected\n        ? colors.primary\n        : colors.primary50\n      : undefined,\n  },\n});\n\nconst Option = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: OptionProps<Option, IsMulti, Group>\n) => {\n  const {\n    children,\n    className,\n    cx,\n    getStyles,\n    isDisabled,\n    isFocused,\n    isSelected,\n    innerRef,\n    innerProps,\n  } = props;\n  return (\n    <div\n      css={getStyles('option', props)}\n      className={cx(\n        {\n          option: true,\n          'option--is-disabled': isDisabled,\n          'option--is-focused': isFocused,\n          'option--is-selected': isSelected,\n        },\n        className\n      )}\n      ref={innerRef}\n      aria-disabled={isDisabled}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Option;\n","/** @jsx jsx */\nimport { ReactNode } from 'react';\nimport { jsx } from '@emotion/react';\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\n\nexport interface PlaceholderProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** props passed to the wrapping element for the group. */\n  innerProps: JSX.IntrinsicElements['div'];\n  isDisabled: boolean;\n  isFocused: boolean;\n}\n\nexport const placeholderCSS = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  theme: { spacing, colors },\n}: PlaceholderProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'placeholder',\n  color: colors.neutral50,\n  marginLeft: spacing.baseUnit / 2,\n  marginRight: spacing.baseUnit / 2,\n  position: 'absolute',\n  top: '50%',\n  transform: 'translateY(-50%)',\n});\n\nconst Placeholder = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: PlaceholderProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, innerProps } = props;\n  return (\n    <div\n      css={getStyles('placeholder', props)}\n      className={cx(\n        {\n          placeholder: true,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Placeholder;\n","/** @jsx jsx */\nimport { ReactNode } from 'react';\nimport { jsx } from '@emotion/react';\nimport {\n  CommonPropsAndClassName,\n  CSSObjectWithLabel,\n  GroupBase,\n  OptionBase,\n} from '../types';\n\nexport interface SingleValueProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends CommonPropsAndClassName<Option, IsMulti, Group> {\n  /** The children to be rendered. */\n  children: ReactNode;\n  /** The data of the selected option rendered in the Single Value component. */\n  data: Option;\n  /** Props passed to the wrapping element for the group. */\n  innerProps: JSX.IntrinsicElements['div'];\n  /** Whether this is disabled. */\n  isDisabled: boolean;\n}\n\nexport const css = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>({\n  isDisabled,\n  theme: { spacing, colors },\n}: SingleValueProps<Option, IsMulti, Group>): CSSObjectWithLabel => ({\n  label: 'singleValue',\n  color: isDisabled ? colors.neutral40 : colors.neutral80,\n  marginLeft: spacing.baseUnit / 2,\n  marginRight: spacing.baseUnit / 2,\n  maxWidth: `calc(100% - ${spacing.baseUnit * 2}px)`,\n  overflow: 'hidden',\n  position: 'absolute',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  top: '50%',\n  transform: 'translateY(-50%)',\n});\n\nconst SingleValue = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: SingleValueProps<Option, IsMulti, Group>\n) => {\n  const { children, className, cx, getStyles, isDisabled, innerProps } = props;\n  return (\n    <div\n      css={getStyles('singleValue', props)}\n      className={cx(\n        {\n          'single-value': true,\n          'single-value--is-disabled': isDisabled,\n        },\n        className\n      )}\n      {...innerProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default SingleValue;\n","import { ComponentType } from 'react';\nimport {\n  ContainerProps,\n  IndicatorsContainer,\n  IndicatorsContainerProps,\n  SelectContainer,\n  ValueContainer,\n  ValueContainerProps,\n} from './containers';\nimport {\n  ClearIndicator,\n  ClearIndicatorProps,\n  CrossIcon,\n  CrossIconProps,\n  DownChevron,\n  DownChevronProps,\n  DropdownIndicator,\n  DropdownIndicatorProps,\n  IndicatorSeparator,\n  IndicatorSeparatorProps,\n  LoadingIndicator,\n  LoadingIndicatorProps,\n} from './indicators';\n\nimport Control, { ControlProps } from './Control';\nimport Group, { GroupHeading, GroupHeadingProps, GroupProps } from './Group';\nimport Input, { InputProps } from './Input';\nimport Menu, {\n  LoadingMessage,\n  MenuList,\n  MenuListProps,\n  MenuPortal,\n  MenuPortalProps,\n  MenuProps,\n  NoOptionsMessage,\n  NoticeProps,\n} from './Menu';\nimport MultiValue, {\n  MultiValueContainer,\n  MultiValueGenericProps,\n  MultiValueLabel,\n  MultiValueProps,\n  MultiValueRemove,\n  MultiValueRemoveProps,\n} from './MultiValue';\nimport Option, { OptionProps } from './Option';\nimport Placeholder, { PlaceholderProps } from './Placeholder';\nimport SingleValue, { SingleValueProps } from './SingleValue';\nimport { GroupBase, OptionBase } from '../types';\n\nexport interface SelectComponents<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  ClearIndicator: ComponentType<ClearIndicatorProps<Option, IsMulti, Group>>;\n  Control: ComponentType<ControlProps<Option, IsMulti, Group>>;\n  DropdownIndicator: ComponentType<\n    DropdownIndicatorProps<Option, IsMulti, Group>\n  > | null;\n  DownChevron: ComponentType<DownChevronProps>;\n  CrossIcon: ComponentType<CrossIconProps>;\n  Group: ComponentType<GroupProps<Option, IsMulti, Group>>;\n  GroupHeading: ComponentType<GroupHeadingProps<Option, IsMulti, Group>>;\n  IndicatorsContainer: ComponentType<\n    IndicatorsContainerProps<Option, IsMulti, Group>\n  >;\n  IndicatorSeparator: ComponentType<\n    IndicatorSeparatorProps<Option, IsMulti, Group>\n  > | null;\n  Input: ComponentType<InputProps<Option, IsMulti, Group>>;\n  LoadingIndicator: ComponentType<\n    LoadingIndicatorProps<Option, IsMulti, Group>\n  >;\n  Menu: ComponentType<MenuProps<Option, IsMulti, Group>>;\n  MenuList: ComponentType<MenuListProps<Option, IsMulti, Group>>;\n  MenuPortal: ComponentType<MenuPortalProps<Option, IsMulti, Group>>;\n  LoadingMessage: ComponentType<NoticeProps<Option, IsMulti, Group>>;\n  NoOptionsMessage: ComponentType<NoticeProps<Option, IsMulti, Group>>;\n  MultiValue: ComponentType<MultiValueProps<Option, IsMulti, Group>>;\n  MultiValueContainer: ComponentType<\n    MultiValueGenericProps<Option, IsMulti, Group>\n  >;\n  MultiValueLabel: ComponentType<\n    MultiValueGenericProps<Option, IsMulti, Group>\n  >;\n  MultiValueRemove: ComponentType<\n    MultiValueRemoveProps<Option, IsMulti, Group>\n  >;\n  Option: ComponentType<OptionProps<Option, IsMulti, Group>>;\n  Placeholder: ComponentType<PlaceholderProps<Option, IsMulti, Group>>;\n  SelectContainer: ComponentType<ContainerProps<Option, IsMulti, Group>>;\n  SingleValue: ComponentType<SingleValueProps<Option, IsMulti, Group>>;\n  ValueContainer: ComponentType<ValueContainerProps<Option, IsMulti, Group>>;\n}\n\nexport type SelectComponentsConfig<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> = Partial<SelectComponents<Option, IsMulti, Group>>;\n\nexport const components = {\n  ClearIndicator: ClearIndicator,\n  Control: Control,\n  DropdownIndicator: DropdownIndicator,\n  DownChevron: DownChevron,\n  CrossIcon: CrossIcon,\n  Group: Group,\n  GroupHeading: GroupHeading,\n  IndicatorsContainer: IndicatorsContainer,\n  IndicatorSeparator: IndicatorSeparator,\n  Input: Input,\n  LoadingIndicator: LoadingIndicator,\n  Menu: Menu,\n  MenuList: MenuList,\n  MenuPortal: MenuPortal,\n  LoadingMessage: LoadingMessage,\n  NoOptionsMessage: NoOptionsMessage,\n  MultiValue: MultiValue,\n  MultiValueContainer: MultiValueContainer,\n  MultiValueLabel: MultiValueLabel,\n  MultiValueRemove: MultiValueRemove,\n  Option: Option,\n  Placeholder: Placeholder,\n  SelectContainer: SelectContainer,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer,\n};\n\nexport type SelectComponentsGeneric = typeof components;\n\ninterface Props<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  components: SelectComponentsConfig<Option, IsMulti, Group>;\n}\n\nexport const defaultComponents = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>\n): SelectComponentsGeneric =>\n  ({\n    ...components,\n    ...props.components,\n  } as SelectComponentsGeneric);\n","import {\n  containerCSS,\n  ContainerProps,\n  indicatorsContainerCSS,\n  IndicatorsContainerProps,\n  valueContainerCSS,\n  ValueContainerProps,\n} from './components/containers';\nimport { ControlProps, css as controlCSS } from './components/Control';\nimport {\n  groupCSS,\n  groupHeadingCSS,\n  GroupHeadingProps,\n  GroupProps,\n} from './components/Group';\nimport {\n  clearIndicatorCSS,\n  dropdownIndicatorCSS,\n  loadingIndicatorCSS,\n  indicatorSeparatorCSS,\n  ClearIndicatorProps,\n  DropdownIndicatorProps,\n  IndicatorSeparatorProps,\n  LoadingIndicatorProps,\n} from './components/indicators';\nimport { inputCSS, InputProps } from './components/Input';\nimport { placeholderCSS, PlaceholderProps } from './components/Placeholder';\nimport { optionCSS, OptionProps } from './components/Option';\nimport {\n  menuCSS,\n  menuListCSS,\n  menuPortalCSS,\n  noOptionsMessageCSS,\n  loadingMessageCSS,\n  NoticeProps,\n  MenuProps,\n  MenuListProps,\n  PortalStyleArgs,\n} from './components/Menu';\nimport {\n  css as singleValueCSS,\n  SingleValueProps,\n} from './components/SingleValue';\nimport {\n  multiValueCSS,\n  multiValueLabelCSS,\n  MultiValueProps,\n  multiValueRemoveCSS,\n} from './components/MultiValue';\nimport { CSSObjectWithLabel, GroupBase, OptionBase } from './types';\n\nexport interface StylesProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  clearIndicator: ClearIndicatorProps<Option, IsMulti, Group>;\n  container: ContainerProps<Option, IsMulti, Group>;\n  control: ControlProps<Option, IsMulti, Group>;\n  dropdownIndicator: DropdownIndicatorProps<Option, IsMulti, Group>;\n  group: GroupProps<Option, IsMulti, Group>;\n  groupHeading: GroupHeadingProps<Option, IsMulti, Group>;\n  indicatorsContainer: IndicatorsContainerProps<Option, IsMulti, Group>;\n  indicatorSeparator: IndicatorSeparatorProps<Option, IsMulti, Group>;\n  input: InputProps<Option, IsMulti, Group>;\n  loadingIndicator: LoadingIndicatorProps<Option, IsMulti, Group>;\n  loadingMessage: NoticeProps<Option, IsMulti, Group>;\n  menu: MenuProps<Option, IsMulti, Group>;\n  menuList: MenuListProps<Option, IsMulti, Group>;\n  menuPortal: PortalStyleArgs;\n  multiValue: MultiValueProps<Option, IsMulti, Group>;\n  multiValueLabel: MultiValueProps<Option, IsMulti, Group>;\n  multiValueRemove: MultiValueProps<Option, IsMulti, Group>;\n  noOptionsMessage: NoticeProps<Option, IsMulti, Group>;\n  option: OptionProps<Option, IsMulti, Group>;\n  placeholder: PlaceholderProps<Option, IsMulti, Group>;\n  singleValue: SingleValueProps<Option, IsMulti, Group>;\n  valueContainer: ValueContainerProps<Option, IsMulti, Group>;\n}\n\ntype StylesFunction<Props> = (props: Props) => CSSObjectWithLabel;\nexport type StylesFunctions<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> = {\n  [K in keyof StylesProps<Option, IsMulti, Group>]: StylesFunction<\n    StylesProps<Option, IsMulti, Group>[K]\n  >;\n};\n\nexport type StylesConfigFunction<Props> = (\n  base: CSSObjectWithLabel,\n  props: Props\n) => CSSObjectWithLabel;\nexport type StylesConfig<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = {\n  [K in keyof StylesProps<Option, IsMulti, Group>]?: StylesConfigFunction<\n    StylesProps<Option, IsMulti, Group>[K]\n  >;\n};\n\nexport const defaultStyles: StylesFunctions<\n  OptionBase,\n  boolean,\n  GroupBase<OptionBase>\n> = {\n  clearIndicator: clearIndicatorCSS,\n  container: containerCSS,\n  control: controlCSS,\n  dropdownIndicator: dropdownIndicatorCSS,\n  group: groupCSS,\n  groupHeading: groupHeadingCSS,\n  indicatorsContainer: indicatorsContainerCSS,\n  indicatorSeparator: indicatorSeparatorCSS,\n  input: inputCSS,\n  loadingIndicator: loadingIndicatorCSS,\n  loadingMessage: loadingMessageCSS,\n  menu: menuCSS,\n  menuList: menuListCSS,\n  menuPortal: menuPortalCSS,\n  multiValue: multiValueCSS,\n  multiValueLabel: multiValueLabelCSS,\n  multiValueRemove: multiValueRemoveCSS,\n  noOptionsMessage: noOptionsMessageCSS,\n  option: optionCSS,\n  placeholder: placeholderCSS,\n  singleValue: singleValueCSS,\n  valueContainer: valueContainerCSS,\n};\n\n// Merge Utility\n// Allows consumers to extend a base Select with additional styles\n\nexport function mergeStyles<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  source: StylesConfig<Option, IsMulti, Group>,\n  target: StylesConfig<Option, IsMulti, Group> = {}\n) {\n  // initialize with source styles\n  const styles = { ...source };\n\n  // massage in target styles\n  Object.keys(target).forEach((keyAsString) => {\n    const key = keyAsString as keyof StylesConfig<Option, IsMulti, Group>;\n    if (source[key]) {\n      styles[key] = (rsCss: any, props: any) => {\n        return target[key]!(source[key]!(rsCss, props), props);\n      };\n    } else {\n      styles[key] = target[key] as any;\n    }\n  });\n\n  return styles;\n}\n","import { Theme } from './types';\n\nexport const colors = {\n  primary: '#2684FF',\n  primary75: '#4C9AFF',\n  primary50: '#B2D4FF',\n  primary25: '#DEEBFF',\n\n  danger: '#DE350B',\n  dangerLight: '#FFBDAD',\n\n  neutral0: 'hsl(0, 0%, 100%)',\n  neutral5: 'hsl(0, 0%, 95%)',\n  neutral10: 'hsl(0, 0%, 90%)',\n  neutral20: 'hsl(0, 0%, 80%)',\n  neutral30: 'hsl(0, 0%, 70%)',\n  neutral40: 'hsl(0, 0%, 60%)',\n  neutral50: 'hsl(0, 0%, 50%)',\n  neutral60: 'hsl(0, 0%, 40%)',\n  neutral70: 'hsl(0, 0%, 30%)',\n  neutral80: 'hsl(0, 0%, 20%)',\n  neutral90: 'hsl(0, 0%, 10%)',\n};\n\nconst borderRadius = 4;\n// Used to calculate consistent margin/padding on elements\nconst baseUnit = 4;\n// The minimum height of the control\nconst controlHeight = 38;\n// The amount of space between the control and menu */\nconst menuGutter = baseUnit * 2;\n\nexport const spacing = {\n  baseUnit,\n  controlHeight,\n  menuGutter,\n};\n\nexport const defaultTheme: Theme = {\n  borderRadius,\n  colors,\n  spacing,\n};\n\nexport type ThemeConfig = Theme | ((theme: Theme) => Theme);\n","import React, {\n  Component,\n  FocusEventHandler,\n  FormEventHandler,\n  KeyboardEventHandler,\n  MouseEventHandler,\n  ReactNode,\n  RefCallback,\n  TouchEventHandler,\n} from 'react';\nimport { MenuPlacer } from './components/Menu';\nimport LiveRegion from './components/LiveRegion';\n\nimport { createFilter, FilterOptionOption } from './filters';\nimport { DummyInput, ScrollManager } from './internal/index';\nimport {\n  AriaLive,\n  AriaLiveMessages,\n  AriaSelection,\n} from './accessibility/index';\n\nimport {\n  classNames,\n  cleanValue,\n  isTouchCapable,\n  isMobileDevice,\n  noop,\n  scrollIntoView,\n  isDocumentElement,\n  notNullish,\n  valueTernary,\n  multiValueAsValue,\n  singleValueAsValue,\n} from './utils';\n\nimport {\n  formatGroupLabel as formatGroupLabelBuiltin,\n  getOptionLabel as getOptionLabelBuiltin,\n  getOptionValue as getOptionValueBuiltin,\n  isOptionDisabled as isOptionDisabledBuiltin,\n} from './builtins';\n\nimport { defaultComponents, SelectComponentsConfig } from './components/index';\n\nimport { defaultStyles, StylesConfig, StylesProps } from './styles';\nimport { defaultTheme, ThemeConfig } from './theme';\n\nimport {\n  ActionMeta,\n  FocusDirection,\n  GetOptionLabel,\n  GetOptionValue,\n  GroupBase,\n  InputActionMeta,\n  MenuPlacement,\n  MenuPosition,\n  OnChangeValue,\n  OptionBase,\n  Options,\n  OptionsOrGroups,\n  PropsValue,\n  SetValueAction,\n} from './types';\n\nexport type FormatOptionLabelContext = 'menu' | 'value';\nexport interface FormatOptionLabelMeta<Option extends OptionBase> {\n  context: FormatOptionLabelContext;\n  inputValue: string;\n  selectValue: Options<Option>;\n}\n\nexport interface Props<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  /** HTML ID of an element containing an error message related to the input**/\n  'aria-errormessage'?: string;\n  /** Indicate if the value entered in the field is invalid **/\n  'aria-invalid'?: boolean;\n  /** Aria label (for assistive tech) */\n  'aria-label'?: string;\n  /** HTML ID of an element that should be used as the label (for assistive tech) */\n  'aria-labelledby'?: string;\n  /** Used to set the priority with which screen reader should treat updates to live regions. The possible settings are: off, polite (default) or assertive */\n  'aria-live'?: AriaLive;\n  /** Customize the messages used by the aria-live component */\n  ariaLiveMessages?: AriaLiveMessages<Option, IsMulti, Group>;\n  /** Focus the control when it is mounted */\n  autoFocus?: boolean;\n  /** Remove the currently focused option when the user presses backspace when Select isClearable or isMulti */\n  backspaceRemovesValue: boolean;\n  /** Remove focus from the input when the user selects an option (handy for dismissing the keyboard on touch devices) */\n  blurInputOnSelect: boolean;\n  /** When the user reaches the top/bottom of the menu, prevent scroll on the scroll-parent  */\n  captureMenuScroll: boolean;\n  /** Sets a className attribute on the outer component */\n  className?: string;\n  /**\n   * If provided, all inner components will be given a prefixed className attribute.\n   *\n   * This is useful when styling via CSS classes instead of the Styles API approach.\n   */\n  classNamePrefix?: string | null;\n  /** Close the select menu when the user selects an option */\n  closeMenuOnSelect: boolean;\n  /**\n   * If `true`, close the select menu when the user scrolls the document/body.\n   *\n   * If a function, takes a standard javascript `ScrollEvent` you return a boolean:\n   *\n   * `true` => The menu closes\n   *\n   * `false` => The menu stays open\n   *\n   * This is useful when you have a scrollable modal and want to portal the menu out,\n   * but want to avoid graphical issues.\n   */\n  closeMenuOnScroll: boolean | ((event: Event) => boolean);\n  /**\n   * This complex object includes all the compositional components that are used\n   * in `react-select`. If you wish to overwrite a component, pass in an object\n   * with the appropriate namespace.\n   *\n   * If you only wish to restyle a component, we recommend using the `styles` prop\n   * instead. For a list of the components that can be passed in, and the shape\n   * that will be passed to them, see [the components docs](/components)\n   */\n  components: SelectComponentsConfig<Option, IsMulti, Group>;\n  /** Whether the value of the select, e.g. SingleValue, should be displayed in the control. */\n  controlShouldRenderValue: boolean;\n  /** Delimiter used to join multiple values into a single HTML Input value */\n  delimiter?: string;\n  /** Clear all values when the user presses escape AND the menu is closed */\n  escapeClearsValue: boolean;\n  /** Custom method to filter whether an option should be displayed in the menu */\n  filterOption:\n    | ((option: FilterOptionOption<Option>, inputValue: string) => boolean)\n    | null;\n  /**\n   * Formats group labels in the menu as React components\n   *\n   * An example can be found in the [Replacing builtins](/advanced#replacing-builtins) documentation.\n   */\n  formatGroupLabel: (group: Group) => ReactNode;\n  /** Formats option labels in the menu and control as React components */\n  formatOptionLabel?: (\n    data: Option,\n    formatOptionLabelMeta: FormatOptionLabelMeta<Option>\n  ) => ReactNode;\n  /**\n   * Resolves option data to a string to be displayed as the label by components\n   *\n   * Note: Failure to resolve to a string type can interfere with filtering and\n   * screen reader support.\n   */\n  getOptionLabel: GetOptionLabel<Option>;\n  /** Resolves option data to a string to compare options and specify value attributes */\n  getOptionValue: GetOptionValue<Option>;\n  /** Hide the selected option from the menu */\n  hideSelectedOptions?: boolean;\n  /** The id to set on the SelectContainer component. */\n  id?: string;\n  /** The value of the search input */\n  inputValue: string;\n  /** The id of the search input */\n  inputId?: string;\n  /** Define an id prefix for the select components e.g. {your-id}-value */\n  instanceId?: number | string;\n  /** Is the select value clearable */\n  isClearable?: boolean;\n  /** Is the select disabled */\n  isDisabled: boolean;\n  /** Is the select in a state of loading (async) */\n  isLoading: boolean;\n  /**\n   * Override the built-in logic to detect whether an option is disabled\n   *\n   * An example can be found in the [Replacing builtins](/advanced#replacing-builtins) documentation.\n   */\n  isOptionDisabled: (option: Option, selectValue: Options<Option>) => boolean;\n  /** Override the built-in logic to detect whether an option is selected */\n  isOptionSelected?: (option: Option, selectValue: Options<Option>) => boolean;\n  /** Support multiple selected options */\n  isMulti: IsMulti;\n  /** Is the select direction right-to-left */\n  isRtl: boolean;\n  /** Whether to enable search functionality */\n  isSearchable: boolean;\n  /** Async: Text to display when loading options */\n  loadingMessage: (obj: { inputValue: string }) => string | null;\n  /** Minimum height of the menu before flipping */\n  minMenuHeight: number;\n  /** Maximum height of the menu before scrolling */\n  maxMenuHeight: number;\n  /** Whether the menu is open */\n  menuIsOpen: boolean;\n  /**\n   * Default placement of the menu in relation to the control. 'auto' will flip\n   * when there isn't enough space below the control.\n   */\n  menuPlacement: MenuPlacement;\n  /** The CSS position value of the menu, when \"fixed\" extra layout management is required */\n  menuPosition: MenuPosition;\n  /**\n   * Whether the menu should use a portal, and where it should attach\n   *\n   * An example can be found in the [Portaling](/advanced#portaling) documentation\n   */\n  menuPortalTarget?: HTMLElement | null;\n  /** Whether to block scroll events when the menu is open */\n  menuShouldBlockScroll: boolean;\n  /** Whether the menu should be scrolled into view when it opens */\n  menuShouldScrollIntoView: boolean;\n  /** Name of the HTML Input (optional - without this, no input will be rendered) */\n  name?: string;\n  /** Text to display when there are no options */\n  noOptionsMessage: (obj: { inputValue: string }) => ReactNode;\n  /** Handle blur events on the control */\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n  /** Handle change events on the select */\n  onChange: (\n    newValue: OnChangeValue<Option, IsMulti>,\n    actionMeta: ActionMeta<Option>\n  ) => void;\n  /** Handle focus events on the control */\n  onFocus?: FocusEventHandler<HTMLInputElement>;\n  /** Handle change events on the input */\n  onInputChange: (newValue: string, actionMeta: InputActionMeta) => void;\n  /** Handle key down events on the select */\n  onKeyDown?: KeyboardEventHandler<HTMLDivElement>;\n  /** Handle the menu opening */\n  onMenuOpen: () => void;\n  /** Handle the menu closing */\n  onMenuClose: () => void;\n  /** Fired when the user scrolls to the top of the menu */\n  onMenuScrollToTop?: (event: WheelEvent | TouchEvent) => void;\n  /** Fired when the user scrolls to the bottom of the menu */\n  onMenuScrollToBottom?: (event: WheelEvent | TouchEvent) => void;\n  /** Allows control of whether the menu is opened when the Select is focused */\n  openMenuOnFocus: boolean;\n  /** Allows control of whether the menu is opened when the Select is clicked */\n  openMenuOnClick: boolean;\n  /** Array of options that populate the select menu */\n  options: OptionsOrGroups<Option, Group>;\n  /** Number of options to jump in menu when page{up|down} keys are used */\n  pageSize: number;\n  /** Placeholder for the select value */\n  placeholder: ReactNode;\n  /** Status to relay to screen readers */\n  screenReaderStatus: (obj: { count: number }) => string;\n  /**\n   * Style modifier methods\n   *\n   * A basic example can be found at the bottom of the [Replacing builtins](/advanced#replacing-builtins) documentation.\n   */\n  styles: StylesConfig<Option, IsMulti, Group>;\n  /** Theme modifier method */\n  theme?: ThemeConfig;\n  /** Sets the tabIndex attribute on the input */\n  tabIndex: number;\n  /** Select the currently focused option when the user presses tab */\n  tabSelectsValue: boolean;\n  /** The value of the select; reflected by the selected option */\n  value: PropsValue<Option>;\n  /** Sets the form attribute on the input */\n  form?: string;\n}\n\nexport const defaultProps = {\n  'aria-live': 'polite',\n  backspaceRemovesValue: true,\n  blurInputOnSelect: isTouchCapable(),\n  captureMenuScroll: !isTouchCapable(),\n  closeMenuOnSelect: true,\n  closeMenuOnScroll: false,\n  components: {},\n  controlShouldRenderValue: true,\n  escapeClearsValue: false,\n  filterOption: createFilter(),\n  formatGroupLabel: formatGroupLabelBuiltin,\n  getOptionLabel: getOptionLabelBuiltin,\n  getOptionValue: getOptionValueBuiltin,\n  isDisabled: false,\n  isLoading: false,\n  isMulti: false,\n  isRtl: false,\n  isSearchable: true,\n  isOptionDisabled: isOptionDisabledBuiltin,\n  loadingMessage: () => 'Loading...',\n  maxMenuHeight: 300,\n  minMenuHeight: 140,\n  menuIsOpen: false,\n  menuPlacement: 'bottom',\n  menuPosition: 'absolute',\n  menuShouldBlockScroll: false,\n  menuShouldScrollIntoView: !isMobileDevice(),\n  noOptionsMessage: () => 'No options',\n  openMenuOnFocus: false,\n  openMenuOnClick: true,\n  options: [],\n  pageSize: 5,\n  placeholder: 'Select...',\n  screenReaderStatus: ({ count }: { count: number }) =>\n    `${count} result${count !== 1 ? 's' : ''} available`,\n  styles: {},\n  tabIndex: 0,\n  tabSelectsValue: true,\n};\n\ninterface State<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> {\n  ariaSelection: AriaSelection<Option, IsMulti> | null;\n  inputIsHidden: boolean;\n  isFocused: boolean;\n  focusedOption: Option | null;\n  focusedValue: Option | null;\n  selectValue: Options<Option>;\n  clearFocusValueOnUpdate: boolean;\n  prevWasFocused: boolean;\n  inputIsHiddenAfterUpdate: boolean | null | undefined;\n  prevProps: Props<Option, IsMulti, Group> | void;\n}\n\ninterface CategorizedOption<Option extends OptionBase> {\n  type: 'option';\n  data: Option;\n  isDisabled: boolean;\n  isSelected: boolean;\n  label: string;\n  value: string;\n  index: number;\n}\n\ninterface CategorizedGroup<\n  Option extends OptionBase,\n  Group extends GroupBase<Option>\n> {\n  type: 'group';\n  data: Group;\n  options: readonly CategorizedOption<Option>[];\n  index: number;\n}\n\ntype CategorizedGroupOrOption<\n  Option extends OptionBase,\n  Group extends GroupBase<Option>\n> = CategorizedGroup<Option, Group> | CategorizedOption<Option>;\n\nfunction toCategorizedOption<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  option: Option,\n  selectValue: Options<Option>,\n  index: number\n): CategorizedOption<Option> {\n  const isDisabled = isOptionDisabled(props, option, selectValue);\n  const isSelected = isOptionSelected(props, option, selectValue);\n  const label = getOptionLabel(props, option);\n  const value = getOptionValue(props, option);\n\n  return {\n    type: 'option',\n    data: option,\n    isDisabled,\n    isSelected,\n    label,\n    value,\n    index,\n  };\n}\n\nfunction buildCategorizedOptions<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  selectValue: Options<Option>\n): CategorizedGroupOrOption<Option, Group>[] {\n  return props.options\n    .map((groupOrOption, groupOrOptionIndex) => {\n      if ('options' in groupOrOption) {\n        const categorizedOptions = groupOrOption.options\n          .map((option, optionIndex) =>\n            toCategorizedOption(props, option, selectValue, optionIndex)\n          )\n          .filter((categorizedOption) => isFocusable(props, categorizedOption));\n        return categorizedOptions.length > 0\n          ? {\n              type: 'group' as const,\n              data: groupOrOption,\n              options: categorizedOptions,\n              index: groupOrOptionIndex,\n            }\n          : undefined;\n      }\n      const categorizedOption = toCategorizedOption(\n        props,\n        groupOrOption,\n        selectValue,\n        groupOrOptionIndex\n      );\n      return isFocusable(props, categorizedOption)\n        ? categorizedOption\n        : undefined;\n    })\n    .filter(notNullish);\n}\n\nfunction buildFocusableOptionsFromCategorizedOptions<\n  Option extends OptionBase,\n  Group extends GroupBase<Option>\n>(categorizedOptions: readonly CategorizedGroupOrOption<Option, Group>[]) {\n  return categorizedOptions.reduce<Option[]>(\n    (optionsAccumulator, categorizedOption) => {\n      if (categorizedOption.type === 'group') {\n        optionsAccumulator.push(\n          ...categorizedOption.options.map((option) => option.data)\n        );\n      } else {\n        optionsAccumulator.push(categorizedOption.data);\n      }\n      return optionsAccumulator;\n    },\n    []\n  );\n}\n\nfunction buildFocusableOptions<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(props: Props<Option, IsMulti, Group>, selectValue: Options<Option>) {\n  return buildFocusableOptionsFromCategorizedOptions(\n    buildCategorizedOptions(props, selectValue)\n  );\n}\n\nfunction isFocusable<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  categorizedOption: CategorizedOption<Option>\n) {\n  const { inputValue = '' } = props;\n  const { data, isSelected, label, value } = categorizedOption;\n\n  return (\n    (!shouldHideSelectedOptions(props) || !isSelected) &&\n    filterOption(props, { label, value, data }, inputValue)\n  );\n}\n\nfunction getNextFocusedValue<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(state: State<Option, IsMulti, Group>, nextSelectValue: Options<Option>) {\n  const { focusedValue, selectValue: lastSelectValue } = state;\n  const lastFocusedIndex = lastSelectValue.indexOf(focusedValue!);\n  if (lastFocusedIndex > -1) {\n    const nextFocusedIndex = nextSelectValue.indexOf(focusedValue!);\n    if (nextFocusedIndex > -1) {\n      // the focused value is still in the selectValue, return it\n      return focusedValue;\n    } else if (lastFocusedIndex < nextSelectValue.length) {\n      // the focusedValue is not present in the next selectValue array by\n      // reference, so return the new value at the same index\n      return nextSelectValue[lastFocusedIndex];\n    }\n  }\n  return null;\n}\n\nfunction getNextFocusedOption<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(state: State<Option, IsMulti, Group>, options: Options<Option>) {\n  const { focusedOption: lastFocusedOption } = state;\n  return lastFocusedOption && options.indexOf(lastFocusedOption) > -1\n    ? lastFocusedOption\n    : options[0];\n}\nconst getOptionLabel = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  data: Option\n): string => {\n  return props.getOptionLabel(data);\n};\nconst getOptionValue = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  data: Option\n): string => {\n  return props.getOptionValue(data);\n};\n\nfunction isOptionDisabled<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  option: Option,\n  selectValue: Options<Option>\n): boolean {\n  return typeof props.isOptionDisabled === 'function'\n    ? props.isOptionDisabled(option, selectValue)\n    : false;\n}\nfunction isOptionSelected<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  option: Option,\n  selectValue: Options<Option>\n): boolean {\n  if (selectValue.indexOf(option) > -1) return true;\n  if (typeof props.isOptionSelected === 'function') {\n    return props.isOptionSelected(option, selectValue);\n  }\n  const candidate = getOptionValue(props, option);\n  return selectValue.some((i) => getOptionValue(props, i) === candidate);\n}\nfunction filterOption<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>,\n  option: FilterOptionOption<Option>,\n  inputValue: string\n) {\n  return props.filterOption ? props.filterOption(option, inputValue) : true;\n}\n\nconst shouldHideSelectedOptions = <\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group>\n) => {\n  const { hideSelectedOptions, isMulti } = props;\n  if (hideSelectedOptions === undefined) return isMulti;\n  return hideSelectedOptions;\n};\n\nlet instanceId = 1;\n\nexport default class Select<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> extends Component<\n  Props<Option, IsMulti, Group>,\n  State<Option, IsMulti, Group>\n> {\n  static defaultProps = defaultProps;\n  state: State<Option, IsMulti, Group> = {\n    ariaSelection: null,\n    focusedOption: null,\n    focusedValue: null,\n    inputIsHidden: false,\n    isFocused: false,\n    selectValue: [],\n    clearFocusValueOnUpdate: false,\n    prevWasFocused: false,\n    inputIsHiddenAfterUpdate: undefined,\n    prevProps: undefined,\n  };\n\n  // Misc. Instance Properties\n  // ------------------------------\n\n  blockOptionHover = false;\n  isComposing = false;\n  commonProps: any; // TODO\n  initialTouchX = 0;\n  initialTouchY = 0;\n  instancePrefix = '';\n  openAfterFocus = false;\n  scrollToFocusedOptionOnUpdate = false;\n  userIsDragging?: boolean;\n\n  // Refs\n  // ------------------------------\n\n  controlRef: HTMLDivElement | null = null;\n  getControlRef: RefCallback<HTMLDivElement> = (ref) => {\n    this.controlRef = ref;\n  };\n  focusedOptionRef: HTMLDivElement | null = null;\n  getFocusedOptionRef: RefCallback<HTMLDivElement> = (ref) => {\n    this.focusedOptionRef = ref;\n  };\n  menuListRef: HTMLDivElement | null = null;\n  getMenuListRef: RefCallback<HTMLDivElement> = (ref) => {\n    this.menuListRef = ref;\n  };\n  inputRef: HTMLInputElement | null = null;\n  getInputRef: RefCallback<HTMLInputElement> = (ref) => {\n    this.inputRef = ref;\n  };\n\n  // Lifecycle\n  // ------------------------------\n\n  constructor(props: Props<Option, IsMulti, Group>) {\n    super(props);\n    this.instancePrefix =\n      'react-select-' + (this.props.instanceId || ++instanceId);\n    this.state.selectValue = cleanValue(props.value);\n  }\n\n  static getDerivedStateFromProps(\n    props: Props<OptionBase, boolean, GroupBase<OptionBase>>,\n    state: State<OptionBase, boolean, GroupBase<OptionBase>>\n  ) {\n    const {\n      prevProps,\n      clearFocusValueOnUpdate,\n      inputIsHiddenAfterUpdate,\n      ariaSelection,\n      isFocused,\n      prevWasFocused,\n    } = state;\n    const { options, value, menuIsOpen, inputValue, isMulti } = props;\n    const selectValue = cleanValue(value);\n    let newMenuOptionsState = {};\n    if (\n      prevProps &&\n      (value !== prevProps.value ||\n        options !== prevProps.options ||\n        menuIsOpen !== prevProps.menuIsOpen ||\n        inputValue !== prevProps.inputValue)\n    ) {\n      const focusableOptions = menuIsOpen\n        ? buildFocusableOptions(props, selectValue)\n        : [];\n      const focusedValue = clearFocusValueOnUpdate\n        ? getNextFocusedValue(state, selectValue)\n        : null;\n      const focusedOption = getNextFocusedOption(state, focusableOptions);\n      newMenuOptionsState = {\n        selectValue,\n        focusedOption,\n        focusedValue,\n        clearFocusValueOnUpdate: false,\n      };\n    }\n    // some updates should toggle the state of the input visibility\n    const newInputIsHiddenState =\n      inputIsHiddenAfterUpdate != null && props !== prevProps\n        ? {\n            inputIsHidden: inputIsHiddenAfterUpdate,\n            inputIsHiddenAfterUpdate: undefined,\n          }\n        : {};\n\n    let newAriaSelection = ariaSelection;\n\n    let hasKeptFocus = isFocused && prevWasFocused;\n\n    if (isFocused && !hasKeptFocus) {\n      // If `value` or `defaultValue` props are not empty then announce them\n      // when the Select is initially focused\n      newAriaSelection = {\n        value: valueTernary(isMulti, selectValue, selectValue[0] || null),\n        options: selectValue,\n        action: 'initial-input-focus',\n      };\n\n      hasKeptFocus = !prevWasFocused;\n    }\n\n    // If the 'initial-input-focus' action has been set already\n    // then reset the ariaSelection to null\n    if (ariaSelection?.action === 'initial-input-focus') {\n      newAriaSelection = null;\n    }\n\n    return {\n      ...newMenuOptionsState,\n      ...newInputIsHiddenState,\n      prevProps: props,\n      ariaSelection: newAriaSelection,\n      prevWasFocused: hasKeptFocus,\n    };\n  }\n  componentDidMount() {\n    this.startListeningComposition();\n    this.startListeningToTouch();\n\n    if (this.props.closeMenuOnScroll && document && document.addEventListener) {\n      // Listen to all scroll events, and filter them out inside of 'onScroll'\n      document.addEventListener('scroll', this.onScroll, true);\n    }\n\n    if (this.props.autoFocus) {\n      this.focusInput();\n    }\n  }\n  componentDidUpdate(prevProps: Props<Option, IsMulti, Group>) {\n    const { isDisabled, menuIsOpen } = this.props;\n    const { isFocused } = this.state;\n\n    if (\n      // ensure focus is restored correctly when the control becomes enabled\n      (isFocused && !isDisabled && prevProps.isDisabled) ||\n      // ensure focus is on the Input when the menu opens\n      (isFocused && menuIsOpen && !prevProps.menuIsOpen)\n    ) {\n      this.focusInput();\n    }\n\n    if (isFocused && isDisabled && !prevProps.isDisabled) {\n      // ensure select state gets blurred in case Select is programatically disabled while focused\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ isFocused: false }, this.onMenuClose);\n    }\n\n    // scroll the focused option into view if necessary\n    if (\n      this.menuListRef &&\n      this.focusedOptionRef &&\n      this.scrollToFocusedOptionOnUpdate\n    ) {\n      scrollIntoView(this.menuListRef, this.focusedOptionRef);\n      this.scrollToFocusedOptionOnUpdate = false;\n    }\n  }\n  componentWillUnmount() {\n    this.stopListeningComposition();\n    this.stopListeningToTouch();\n    document.removeEventListener('scroll', this.onScroll, true);\n  }\n\n  // ==============================\n  // Consumer Handlers\n  // ==============================\n\n  onMenuOpen() {\n    this.props.onMenuOpen();\n  }\n  onMenuClose() {\n    this.onInputChange('', { action: 'menu-close' });\n    this.props.onMenuClose();\n  }\n  onInputChange(newValue: string, actionMeta: InputActionMeta) {\n    this.props.onInputChange(newValue, actionMeta);\n  }\n\n  // ==============================\n  // Methods\n  // ==============================\n\n  focusInput() {\n    if (!this.inputRef) return;\n    this.inputRef.focus();\n  }\n  blurInput() {\n    if (!this.inputRef) return;\n    this.inputRef.blur();\n  }\n\n  // aliased for consumers\n  focus = this.focusInput;\n  blur = this.blurInput;\n\n  openMenu(focusOption: 'first' | 'last') {\n    const { selectValue, isFocused } = this.state;\n    const focusableOptions = this.buildFocusableOptions();\n    let openAtIndex = focusOption === 'first' ? 0 : focusableOptions.length - 1;\n\n    if (!this.props.isMulti) {\n      const selectedIndex = focusableOptions.indexOf(selectValue[0]);\n      if (selectedIndex > -1) {\n        openAtIndex = selectedIndex;\n      }\n    }\n\n    // only scroll if the menu isn't already open\n    this.scrollToFocusedOptionOnUpdate = !(isFocused && this.menuListRef);\n\n    this.setState(\n      {\n        inputIsHiddenAfterUpdate: false,\n        focusedValue: null,\n        focusedOption: focusableOptions[openAtIndex],\n      },\n      () => this.onMenuOpen()\n    );\n  }\n\n  focusValue(direction: 'previous' | 'next') {\n    const { selectValue, focusedValue } = this.state;\n\n    // Only multiselects support value focusing\n    if (!this.props.isMulti) return;\n\n    this.setState({\n      focusedOption: null,\n    });\n\n    let focusedIndex = selectValue.indexOf(focusedValue!);\n    if (!focusedValue) {\n      focusedIndex = -1;\n    }\n\n    const lastIndex = selectValue.length - 1;\n    let nextFocus = -1;\n    if (!selectValue.length) return;\n\n    switch (direction) {\n      case 'previous':\n        if (focusedIndex === 0) {\n          // don't cycle from the start to the end\n          nextFocus = 0;\n        } else if (focusedIndex === -1) {\n          // if nothing is focused, focus the last value first\n          nextFocus = lastIndex;\n        } else {\n          nextFocus = focusedIndex - 1;\n        }\n        break;\n      case 'next':\n        if (focusedIndex > -1 && focusedIndex < lastIndex) {\n          nextFocus = focusedIndex + 1;\n        }\n        break;\n    }\n    this.setState({\n      inputIsHidden: nextFocus !== -1,\n      focusedValue: selectValue[nextFocus],\n    });\n  }\n\n  focusOption(direction: FocusDirection = 'first') {\n    const { pageSize } = this.props;\n    const { focusedOption } = this.state;\n    const options = this.getFocusableOptions();\n\n    if (!options.length) return;\n    let nextFocus = 0; // handles 'first'\n    let focusedIndex = options.indexOf(focusedOption!);\n    if (!focusedOption) {\n      focusedIndex = -1;\n    }\n\n    if (direction === 'up') {\n      nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options.length - 1;\n    } else if (direction === 'down') {\n      nextFocus = (focusedIndex + 1) % options.length;\n    } else if (direction === 'pageup') {\n      nextFocus = focusedIndex - pageSize;\n      if (nextFocus < 0) nextFocus = 0;\n    } else if (direction === 'pagedown') {\n      nextFocus = focusedIndex + pageSize;\n      if (nextFocus > options.length - 1) nextFocus = options.length - 1;\n    } else if (direction === 'last') {\n      nextFocus = options.length - 1;\n    }\n    this.scrollToFocusedOptionOnUpdate = true;\n    this.setState({\n      focusedOption: options[nextFocus],\n      focusedValue: null,\n    });\n  }\n  onChange = (\n    newValue: OnChangeValue<Option, IsMulti>,\n    actionMeta: ActionMeta<Option>\n  ) => {\n    const { onChange, name } = this.props;\n    actionMeta.name = name;\n\n    this.ariaOnChange(newValue, actionMeta);\n    onChange(newValue, actionMeta);\n  };\n  setValue = (\n    newValue: OnChangeValue<Option, IsMulti>,\n    action: SetValueAction,\n    option?: Option\n  ) => {\n    const { closeMenuOnSelect, isMulti } = this.props;\n    this.onInputChange('', { action: 'set-value' });\n    if (closeMenuOnSelect) {\n      this.setState({ inputIsHiddenAfterUpdate: !isMulti });\n      this.onMenuClose();\n    }\n    // when the select value should change, we should reset focusedValue\n    this.setState({ clearFocusValueOnUpdate: true });\n    this.onChange(newValue, { action, option });\n  };\n  selectOption = (newValue: Option) => {\n    const { blurInputOnSelect, isMulti, name } = this.props;\n    const { selectValue } = this.state;\n    const deselected = isMulti && this.isOptionSelected(newValue, selectValue);\n    const isDisabled = this.isOptionDisabled(newValue, selectValue);\n\n    if (deselected) {\n      const candidate = this.getOptionValue(newValue);\n      this.setValue(\n        multiValueAsValue(\n          selectValue.filter((i) => this.getOptionValue(i) !== candidate)\n        ),\n        'deselect-option',\n        newValue\n      );\n    } else if (!isDisabled) {\n      // Select option if option is not disabled\n      if (isMulti) {\n        this.setValue(\n          multiValueAsValue([...selectValue, newValue]),\n          'select-option',\n          newValue\n        );\n      } else {\n        this.setValue(singleValueAsValue(newValue), 'select-option');\n      }\n    } else {\n      this.ariaOnChange(singleValueAsValue(newValue), {\n        action: 'select-option',\n        option: newValue,\n        name,\n      });\n      return;\n    }\n\n    if (blurInputOnSelect) {\n      this.blurInput();\n    }\n  };\n  removeValue = (removedValue: Option) => {\n    const { isMulti } = this.props;\n    const { selectValue } = this.state;\n    const candidate = this.getOptionValue(removedValue);\n    const newValueArray = selectValue.filter(\n      (i) => this.getOptionValue(i) !== candidate\n    );\n    const newValue = valueTernary(\n      isMulti,\n      newValueArray,\n      newValueArray[0] || null\n    );\n\n    this.onChange(newValue, { action: 'remove-value', removedValue });\n    this.focusInput();\n  };\n  clearValue = () => {\n    const { selectValue } = this.state;\n    this.onChange(valueTernary(this.props.isMulti, [], null), {\n      action: 'clear',\n      removedValues: selectValue,\n    });\n  };\n  popValue = () => {\n    const { isMulti } = this.props;\n    const { selectValue } = this.state;\n    const lastSelectedValue = selectValue[selectValue.length - 1];\n    const newValueArray = selectValue.slice(0, selectValue.length - 1);\n    const newValue = valueTernary(\n      isMulti,\n      newValueArray,\n      newValueArray[0] || null\n    );\n\n    this.onChange(newValue, {\n      action: 'pop-value',\n      removedValue: lastSelectedValue,\n    });\n  };\n\n  // ==============================\n  // Getters\n  // ==============================\n\n  getTheme() {\n    // Use the default theme if there are no customizations.\n    if (!this.props.theme) {\n      return defaultTheme;\n    }\n    // If the theme prop is a function, assume the function\n    // knows how to merge the passed-in default theme with\n    // its own modifications.\n    if (typeof this.props.theme === 'function') {\n      return this.props.theme(defaultTheme);\n    }\n    // Otherwise, if a plain theme object was passed in,\n    // overlay it with the default theme.\n    return {\n      ...defaultTheme,\n      ...this.props.theme,\n    };\n  }\n\n  getValue = () => this.state.selectValue;\n\n  cx = (...args: any) => classNames(this.props.classNamePrefix, ...args);\n\n  getCommonProps() {\n    const {\n      clearValue,\n      cx,\n      getStyles,\n      getValue,\n      selectOption,\n      setValue,\n      props,\n    } = this;\n    const { isMulti, isRtl, options } = props;\n    const hasValue = this.hasValue();\n\n    return {\n      clearValue,\n      cx,\n      getStyles,\n      getValue,\n      hasValue,\n      isMulti,\n      isRtl,\n      options,\n      selectOption,\n      selectProps: props,\n      setValue,\n      theme: this.getTheme(),\n    };\n  }\n\n  getOptionLabel = (data: Option): string => {\n    return getOptionLabel(this.props, data);\n  };\n  getOptionValue = (data: Option): string => {\n    return getOptionValue(this.props, data);\n  };\n  getStyles = <Key extends keyof StylesProps<Option, IsMulti, Group>>(\n    key: Key,\n    props: StylesProps<Option, IsMulti, Group>[Key]\n  ) => {\n    const base = defaultStyles[key](props as any);\n    base.boxSizing = 'border-box';\n    const custom = this.props.styles[key];\n    return custom ? custom(base, props as any) : base;\n  };\n  getElementId = (\n    element:\n      | 'group'\n      | 'input'\n      | 'listbox'\n      | 'option'\n      | 'placeholder'\n      | 'live-region'\n  ) => {\n    return `${this.instancePrefix}-${element}`;\n  };\n\n  getComponents = () => {\n    return defaultComponents(this.props);\n  };\n\n  buildCategorizedOptions = () =>\n    buildCategorizedOptions(this.props, this.state.selectValue);\n  getCategorizedOptions = () =>\n    this.props.menuIsOpen ? this.buildCategorizedOptions() : [];\n  buildFocusableOptions = () =>\n    buildFocusableOptionsFromCategorizedOptions(this.buildCategorizedOptions());\n  getFocusableOptions = () =>\n    this.props.menuIsOpen ? this.buildFocusableOptions() : [];\n\n  // ==============================\n  // Helpers\n  // ==============================\n\n  ariaOnChange = (\n    value: OnChangeValue<Option, IsMulti>,\n    actionMeta: ActionMeta<Option>\n  ) => {\n    this.setState({ ariaSelection: { value, ...actionMeta } });\n  };\n\n  hasValue() {\n    const { selectValue } = this.state;\n    return selectValue.length > 0;\n  }\n  hasOptions() {\n    return !!this.getFocusableOptions().length;\n  }\n  isClearable(): boolean {\n    const { isClearable, isMulti } = this.props;\n\n    // single select, by default, IS NOT clearable\n    // multi select, by default, IS clearable\n    if (isClearable === undefined) return isMulti;\n\n    return isClearable;\n  }\n  isOptionDisabled(option: Option, selectValue: Options<Option>): boolean {\n    return isOptionDisabled(this.props, option, selectValue);\n  }\n  isOptionSelected(option: Option, selectValue: Options<Option>): boolean {\n    return isOptionSelected(this.props, option, selectValue);\n  }\n  filterOption(option: FilterOptionOption<Option>, inputValue: string) {\n    return filterOption(this.props, option, inputValue);\n  }\n  formatOptionLabel(\n    data: Option,\n    context: FormatOptionLabelContext\n  ): ReactNode {\n    if (typeof this.props.formatOptionLabel === 'function') {\n      const { inputValue } = this.props;\n      const { selectValue } = this.state;\n      return this.props.formatOptionLabel(data, {\n        context,\n        inputValue,\n        selectValue,\n      });\n    } else {\n      return this.getOptionLabel(data);\n    }\n  }\n  formatGroupLabel(data: Group) {\n    return this.props.formatGroupLabel(data);\n  }\n\n  // ==============================\n  // Mouse Handlers\n  // ==============================\n\n  onMenuMouseDown: MouseEventHandler<HTMLDivElement> = (event) => {\n    if (event.button !== 0) {\n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    this.focusInput();\n  };\n  onMenuMouseMove: MouseEventHandler<HTMLDivElement> = (event) => {\n    this.blockOptionHover = false;\n  };\n  onControlMouseDown = (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => {\n    const { openMenuOnClick } = this.props;\n    if (!this.state.isFocused) {\n      if (openMenuOnClick) {\n        this.openAfterFocus = true;\n      }\n      this.focusInput();\n    } else if (!this.props.menuIsOpen) {\n      if (openMenuOnClick) {\n        this.openMenu('first');\n      }\n    } else {\n      if (\n        (event.target as HTMLElement).tagName !== 'INPUT' &&\n        (event.target as HTMLElement).tagName !== 'TEXTAREA'\n      ) {\n        this.onMenuClose();\n      }\n    }\n    if (\n      (event.target as HTMLElement).tagName !== 'INPUT' &&\n      (event.target as HTMLElement).tagName !== 'TEXTAREA'\n    ) {\n      event.preventDefault();\n    }\n  };\n  onDropdownIndicatorMouseDown = (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => {\n    // ignore mouse events that weren't triggered by the primary button\n    if (\n      event &&\n      event.type === 'mousedown' &&\n      (event as React.MouseEvent<HTMLDivElement>).button !== 0\n    ) {\n      return;\n    }\n    if (this.props.isDisabled) return;\n    const { isMulti, menuIsOpen } = this.props;\n    this.focusInput();\n    if (menuIsOpen) {\n      this.setState({ inputIsHiddenAfterUpdate: !isMulti });\n      this.onMenuClose();\n    } else {\n      this.openMenu('first');\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  onClearIndicatorMouseDown = (\n    event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>\n  ) => {\n    // ignore mouse events that weren't triggered by the primary button\n    if (\n      event &&\n      event.type === 'mousedown' &&\n      (event as React.MouseEvent<HTMLDivElement>).button !== 0\n    ) {\n      return;\n    }\n    this.clearValue();\n    event.preventDefault();\n    event.stopPropagation();\n    this.openAfterFocus = false;\n    if (event.type === 'touchend') {\n      this.focusInput();\n    } else {\n      setTimeout(() => this.focusInput());\n    }\n  };\n  onScroll = (event: Event) => {\n    if (typeof this.props.closeMenuOnScroll === 'boolean') {\n      if (\n        event.target instanceof HTMLElement &&\n        isDocumentElement(event.target)\n      ) {\n        this.props.onMenuClose();\n      }\n    } else if (typeof this.props.closeMenuOnScroll === 'function') {\n      if (this.props.closeMenuOnScroll(event)) {\n        this.props.onMenuClose();\n      }\n    }\n  };\n\n  // ==============================\n  // Composition Handlers\n  // ==============================\n\n  startListeningComposition() {\n    if (document && document.addEventListener) {\n      document.addEventListener(\n        'compositionstart',\n        this.onCompositionStart,\n        false\n      );\n      document.addEventListener('compositionend', this.onCompositionEnd, false);\n    }\n  }\n  stopListeningComposition() {\n    if (document && document.removeEventListener) {\n      document.removeEventListener('compositionstart', this.onCompositionStart);\n      document.removeEventListener('compositionend', this.onCompositionEnd);\n    }\n  }\n  onCompositionStart = () => {\n    this.isComposing = true;\n  };\n  onCompositionEnd = () => {\n    this.isComposing = false;\n  };\n\n  // ==============================\n  // Touch Handlers\n  // ==============================\n\n  startListeningToTouch() {\n    if (document && document.addEventListener) {\n      document.addEventListener('touchstart', this.onTouchStart, false);\n      document.addEventListener('touchmove', this.onTouchMove, false);\n      document.addEventListener('touchend', this.onTouchEnd, false);\n    }\n  }\n  stopListeningToTouch() {\n    if (document && document.removeEventListener) {\n      document.removeEventListener('touchstart', this.onTouchStart);\n      document.removeEventListener('touchmove', this.onTouchMove);\n      document.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n  onTouchStart = ({ touches }: TouchEvent) => {\n    const touch = touches && touches.item(0);\n    if (!touch) {\n      return;\n    }\n\n    this.initialTouchX = touch.clientX;\n    this.initialTouchY = touch.clientY;\n    this.userIsDragging = false;\n  };\n  onTouchMove = ({ touches }: TouchEvent) => {\n    const touch = touches && touches.item(0);\n    if (!touch) {\n      return;\n    }\n\n    const deltaX = Math.abs(touch.clientX - this.initialTouchX);\n    const deltaY = Math.abs(touch.clientY - this.initialTouchY);\n    const moveThreshold = 5;\n\n    this.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold;\n  };\n  onTouchEnd = (event: TouchEvent) => {\n    if (this.userIsDragging) return;\n\n    // close the menu if the user taps outside\n    // we're checking on event.target here instead of event.currentTarget, because we want to assert information\n    // on events on child elements, not the document (which we've attached this handler to).\n    if (\n      this.controlRef &&\n      !this.controlRef.contains(event.target as Node) &&\n      this.menuListRef &&\n      !this.menuListRef.contains(event.target as Node)\n    ) {\n      this.blurInput();\n    }\n\n    // reset move vars\n    this.initialTouchX = 0;\n    this.initialTouchY = 0;\n  };\n  onControlTouchEnd: TouchEventHandler<HTMLDivElement> = (event) => {\n    if (this.userIsDragging) return;\n    this.onControlMouseDown(event);\n  };\n  onClearIndicatorTouchEnd: TouchEventHandler<HTMLDivElement> = (event) => {\n    if (this.userIsDragging) return;\n\n    this.onClearIndicatorMouseDown(event);\n  };\n  onDropdownIndicatorTouchEnd: TouchEventHandler<HTMLDivElement> = (event) => {\n    if (this.userIsDragging) return;\n\n    this.onDropdownIndicatorMouseDown(event);\n  };\n\n  // ==============================\n  // Focus Handlers\n  // ==============================\n\n  handleInputChange: FormEventHandler<HTMLInputElement> = (event) => {\n    const inputValue = event.currentTarget.value;\n    this.setState({ inputIsHiddenAfterUpdate: false });\n    this.onInputChange(inputValue, { action: 'input-change' });\n    if (!this.props.menuIsOpen) {\n      this.onMenuOpen();\n    }\n  };\n  onInputFocus: FocusEventHandler<HTMLInputElement> = (event) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n    this.setState({\n      inputIsHiddenAfterUpdate: false,\n      isFocused: true,\n    });\n    if (this.openAfterFocus || this.props.openMenuOnFocus) {\n      this.openMenu('first');\n    }\n    this.openAfterFocus = false;\n  };\n  onInputBlur: FocusEventHandler<HTMLInputElement> = (event) => {\n    if (this.menuListRef && this.menuListRef.contains(document.activeElement)) {\n      this.inputRef!.focus();\n      return;\n    }\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n    this.onInputChange('', { action: 'input-blur' });\n    this.onMenuClose();\n    this.setState({\n      focusedValue: null,\n      isFocused: false,\n    });\n  };\n  onOptionHover = (focusedOption: Option) => {\n    if (this.blockOptionHover || this.state.focusedOption === focusedOption) {\n      return;\n    }\n    this.setState({ focusedOption });\n  };\n  shouldHideSelectedOptions = () => {\n    return shouldHideSelectedOptions(this.props);\n  };\n\n  // ==============================\n  // Keyboard Handlers\n  // ==============================\n\n  onKeyDown: KeyboardEventHandler<HTMLDivElement> = (event) => {\n    const {\n      isMulti,\n      backspaceRemovesValue,\n      escapeClearsValue,\n      inputValue,\n      isClearable,\n      isDisabled,\n      menuIsOpen,\n      onKeyDown,\n      tabSelectsValue,\n      openMenuOnFocus,\n    } = this.props;\n    const { focusedOption, focusedValue, selectValue } = this.state;\n\n    if (isDisabled) return;\n\n    if (typeof onKeyDown === 'function') {\n      onKeyDown(event);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    // Block option hover events when the user has just pressed a key\n    this.blockOptionHover = true;\n    switch (event.key) {\n      case 'ArrowLeft':\n        if (!isMulti || inputValue) return;\n        this.focusValue('previous');\n        break;\n      case 'ArrowRight':\n        if (!isMulti || inputValue) return;\n        this.focusValue('next');\n        break;\n      case 'Delete':\n      case 'Backspace':\n        if (inputValue) return;\n        if (focusedValue) {\n          this.removeValue(focusedValue);\n        } else {\n          if (!backspaceRemovesValue) return;\n          if (isMulti) {\n            this.popValue();\n          } else if (isClearable) {\n            this.clearValue();\n          }\n        }\n        break;\n      case 'Tab':\n        if (this.isComposing) return;\n\n        if (\n          event.shiftKey ||\n          !menuIsOpen ||\n          !tabSelectsValue ||\n          !focusedOption ||\n          // don't capture the event if the menu opens on focus and the focused\n          // option is already selected; it breaks the flow of navigation\n          (openMenuOnFocus && this.isOptionSelected(focusedOption, selectValue))\n        ) {\n          return;\n        }\n        this.selectOption(focusedOption);\n        break;\n      case 'Enter':\n        if (event.keyCode === 229) {\n          // ignore the keydown event from an Input Method Editor(IME)\n          // ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n          break;\n        }\n        if (menuIsOpen) {\n          if (!focusedOption) return;\n          if (this.isComposing) return;\n          this.selectOption(focusedOption);\n          break;\n        }\n        return;\n      case 'Escape':\n        if (menuIsOpen) {\n          this.setState({ inputIsHiddenAfterUpdate: false });\n          this.onInputChange('', { action: 'menu-close' });\n          this.onMenuClose();\n        } else if (isClearable && escapeClearsValue) {\n          this.clearValue();\n        }\n        break;\n      case ' ': // space\n        if (inputValue) {\n          return;\n        }\n        if (!menuIsOpen) {\n          this.openMenu('first');\n          break;\n        }\n        if (!focusedOption) return;\n        this.selectOption(focusedOption);\n        break;\n      case 'ArrowUp':\n        if (menuIsOpen) {\n          this.focusOption('up');\n        } else {\n          this.openMenu('last');\n        }\n        break;\n      case 'ArrowDown':\n        if (menuIsOpen) {\n          this.focusOption('down');\n        } else {\n          this.openMenu('first');\n        }\n        break;\n      case 'PageUp':\n        if (!menuIsOpen) return;\n        this.focusOption('pageup');\n        break;\n      case 'PageDown':\n        if (!menuIsOpen) return;\n        this.focusOption('pagedown');\n        break;\n      case 'Home':\n        if (!menuIsOpen) return;\n        this.focusOption('first');\n        break;\n      case 'End':\n        if (!menuIsOpen) return;\n        this.focusOption('last');\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n  };\n\n  // ==============================\n  // Renderers\n  // ==============================\n  renderInput() {\n    const {\n      isDisabled,\n      isSearchable,\n      inputId,\n      inputValue,\n      tabIndex,\n      form,\n      menuIsOpen,\n    } = this.props;\n    const { Input } = this.getComponents();\n    const { inputIsHidden, ariaSelection } = this.state;\n    const { commonProps } = this;\n\n    const id = inputId || this.getElementId('input');\n\n    // aria attributes makes the JSX \"noisy\", separated for clarity\n    const ariaAttributes = {\n      'aria-autocomplete': 'list' as const,\n      'aria-expanded': menuIsOpen,\n      'aria-haspopup': true,\n      'aria-controls': this.getElementId('listbox'),\n      'aria-owns': this.getElementId('listbox'),\n      'aria-errormessage': this.props['aria-errormessage'],\n      'aria-invalid': this.props['aria-invalid'],\n      'aria-label': this.props['aria-label'],\n      'aria-labelledby': this.props['aria-labelledby'],\n      role: 'combobox',\n      ...(!isSearchable && {\n        'aria-readonly': true,\n      }),\n      ...(this.hasValue()\n        ? ariaSelection?.action === 'initial-input-focus' && {\n            'aria-describedby': this.getElementId('live-region'),\n          }\n        : {\n            'aria-describedby': this.getElementId('placeholder'),\n          }),\n    };\n\n    if (!isSearchable) {\n      // use a dummy input to maintain focus/blur functionality\n      return (\n        <DummyInput\n          id={id}\n          innerRef={this.getInputRef}\n          onBlur={this.onInputBlur}\n          onChange={noop}\n          onFocus={this.onInputFocus}\n          disabled={isDisabled}\n          tabIndex={tabIndex}\n          inputMode=\"none\"\n          form={form}\n          value=\"\"\n          {...ariaAttributes}\n        />\n      );\n    }\n\n    return (\n      <Input\n        {...commonProps}\n        autoCapitalize=\"none\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        id={id}\n        innerRef={this.getInputRef}\n        isDisabled={isDisabled}\n        isHidden={inputIsHidden}\n        onBlur={this.onInputBlur}\n        onChange={this.handleInputChange}\n        onFocus={this.onInputFocus}\n        spellCheck=\"false\"\n        tabIndex={tabIndex}\n        form={form}\n        type=\"text\"\n        value={inputValue}\n        {...ariaAttributes}\n      />\n    );\n  }\n  renderPlaceholderOrValue() {\n    const {\n      MultiValue,\n      MultiValueContainer,\n      MultiValueLabel,\n      MultiValueRemove,\n      SingleValue,\n      Placeholder,\n    } = this.getComponents();\n    const { commonProps } = this;\n    const {\n      controlShouldRenderValue,\n      isDisabled,\n      isMulti,\n      inputValue,\n      placeholder,\n    } = this.props;\n    const { selectValue, focusedValue, isFocused } = this.state;\n\n    if (!this.hasValue() || !controlShouldRenderValue) {\n      return inputValue ? null : (\n        <Placeholder\n          {...commonProps}\n          key=\"placeholder\"\n          isDisabled={isDisabled}\n          isFocused={isFocused}\n          innerProps={{ id: this.getElementId('placeholder') }}\n        >\n          {placeholder}\n        </Placeholder>\n      );\n    }\n\n    if (isMulti) {\n      return selectValue.map((opt, index) => {\n        const isOptionFocused = opt === focusedValue;\n\n        return (\n          <MultiValue\n            {...commonProps}\n            components={{\n              Container: MultiValueContainer,\n              Label: MultiValueLabel,\n              Remove: MultiValueRemove,\n            }}\n            isFocused={isOptionFocused}\n            isDisabled={isDisabled}\n            key={`${this.getOptionValue(opt)}${index}`}\n            index={index}\n            removeProps={{\n              onClick: () => this.removeValue(opt),\n              onTouchEnd: () => this.removeValue(opt),\n              onMouseDown: (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n              },\n            }}\n            data={opt}\n          >\n            {this.formatOptionLabel(opt, 'value')}\n          </MultiValue>\n        );\n      });\n    }\n\n    if (inputValue) {\n      return null;\n    }\n\n    const singleValue = selectValue[0];\n    return (\n      <SingleValue {...commonProps} data={singleValue} isDisabled={isDisabled}>\n        {this.formatOptionLabel(singleValue, 'value')}\n      </SingleValue>\n    );\n  }\n  renderClearIndicator() {\n    const { ClearIndicator } = this.getComponents();\n    const { commonProps } = this;\n    const { isDisabled, isLoading } = this.props;\n    const { isFocused } = this.state;\n\n    if (\n      !this.isClearable() ||\n      !ClearIndicator ||\n      isDisabled ||\n      !this.hasValue() ||\n      isLoading\n    ) {\n      return null;\n    }\n\n    const innerProps = {\n      onMouseDown: this.onClearIndicatorMouseDown,\n      onTouchEnd: this.onClearIndicatorTouchEnd,\n      'aria-hidden': 'true',\n    };\n\n    return (\n      <ClearIndicator\n        {...commonProps}\n        innerProps={innerProps}\n        isFocused={isFocused}\n      />\n    );\n  }\n  renderLoadingIndicator() {\n    const { LoadingIndicator } = this.getComponents();\n    const { commonProps } = this;\n    const { isDisabled, isLoading } = this.props;\n    const { isFocused } = this.state;\n\n    if (!LoadingIndicator || !isLoading) return null;\n\n    const innerProps = { 'aria-hidden': 'true' };\n    return (\n      <LoadingIndicator\n        {...commonProps}\n        innerProps={innerProps}\n        isDisabled={isDisabled}\n        isFocused={isFocused}\n      />\n    );\n  }\n  renderIndicatorSeparator() {\n    const { DropdownIndicator, IndicatorSeparator } = this.getComponents();\n\n    // separator doesn't make sense without the dropdown indicator\n    if (!DropdownIndicator || !IndicatorSeparator) return null;\n\n    const { commonProps } = this;\n    const { isDisabled } = this.props;\n    const { isFocused } = this.state;\n\n    return (\n      <IndicatorSeparator\n        {...commonProps}\n        isDisabled={isDisabled}\n        isFocused={isFocused}\n      />\n    );\n  }\n  renderDropdownIndicator() {\n    const { DropdownIndicator } = this.getComponents();\n    if (!DropdownIndicator) return null;\n    const { commonProps } = this;\n    const { isDisabled } = this.props;\n    const { isFocused } = this.state;\n\n    const innerProps = {\n      onMouseDown: this.onDropdownIndicatorMouseDown,\n      onTouchEnd: this.onDropdownIndicatorTouchEnd,\n      'aria-hidden': 'true',\n    };\n\n    return (\n      <DropdownIndicator\n        {...commonProps}\n        innerProps={innerProps}\n        isDisabled={isDisabled}\n        isFocused={isFocused}\n      />\n    );\n  }\n  renderMenu() {\n    const {\n      Group,\n      GroupHeading,\n      Menu,\n      MenuList,\n      MenuPortal,\n      LoadingMessage,\n      NoOptionsMessage,\n      Option,\n    } = this.getComponents();\n    const { commonProps } = this;\n    const { focusedOption } = this.state;\n    const {\n      captureMenuScroll,\n      inputValue,\n      isLoading,\n      loadingMessage,\n      minMenuHeight,\n      maxMenuHeight,\n      menuIsOpen,\n      menuPlacement,\n      menuPosition,\n      menuPortalTarget,\n      menuShouldBlockScroll,\n      menuShouldScrollIntoView,\n      noOptionsMessage,\n      onMenuScrollToTop,\n      onMenuScrollToBottom,\n    } = this.props;\n\n    if (!menuIsOpen) return null;\n\n    // TODO: Internal Option Type here\n    const render = (props: CategorizedOption<Option>, id: string) => {\n      const { type, data, isDisabled, isSelected, label, value } = props;\n      const isFocused = focusedOption === data;\n      const onHover = isDisabled ? undefined : () => this.onOptionHover(data);\n      const onSelect = isDisabled ? undefined : () => this.selectOption(data);\n      const optionId = `${this.getElementId('option')}-${id}`;\n      const innerProps = {\n        id: optionId,\n        onClick: onSelect,\n        onMouseMove: onHover,\n        onMouseOver: onHover,\n        tabIndex: -1,\n      };\n\n      return (\n        <Option\n          {...commonProps}\n          innerProps={innerProps}\n          data={data}\n          isDisabled={isDisabled}\n          isSelected={isSelected}\n          key={optionId}\n          label={label}\n          type={type}\n          value={value}\n          isFocused={isFocused}\n          innerRef={isFocused ? this.getFocusedOptionRef : undefined}\n        >\n          {this.formatOptionLabel(props.data, 'menu')}\n        </Option>\n      );\n    };\n\n    let menuUI: ReactNode;\n\n    if (this.hasOptions()) {\n      menuUI = this.getCategorizedOptions().map((item) => {\n        if (item.type === 'group') {\n          const { data, options, index: groupIndex } = item;\n          const groupId = `${this.getElementId('group')}-${groupIndex}`;\n          const headingId = `${groupId}-heading`;\n\n          return (\n            <Group\n              {...commonProps}\n              key={groupId}\n              data={data}\n              options={options}\n              Heading={GroupHeading}\n              headingProps={{\n                id: headingId,\n                data: item.data,\n              }}\n              label={this.formatGroupLabel(item.data)}\n            >\n              {item.options.map((option) =>\n                render(option, `${groupIndex}-${option.index}`)\n              )}\n            </Group>\n          );\n        } else if (item.type === 'option') {\n          return render(item, `${item.index}`);\n        }\n      });\n    } else if (isLoading) {\n      const message = loadingMessage({ inputValue });\n      if (message === null) return null;\n      menuUI = <LoadingMessage {...commonProps}>{message}</LoadingMessage>;\n    } else {\n      const message = noOptionsMessage({ inputValue });\n      if (message === null) return null;\n      menuUI = <NoOptionsMessage {...commonProps}>{message}</NoOptionsMessage>;\n    }\n    const menuPlacementProps = {\n      minMenuHeight,\n      maxMenuHeight,\n      menuPlacement,\n      menuPosition,\n      menuShouldScrollIntoView,\n    };\n\n    const menuElement = (\n      <MenuPlacer {...commonProps} {...menuPlacementProps}>\n        {({ ref, placerProps: { placement, maxHeight } }) => (\n          <Menu\n            {...commonProps}\n            {...menuPlacementProps}\n            innerRef={ref}\n            innerProps={{\n              onMouseDown: this.onMenuMouseDown,\n              onMouseMove: this.onMenuMouseMove,\n              id: this.getElementId('listbox'),\n            }}\n            isLoading={isLoading}\n            placement={placement}\n          >\n            <ScrollManager\n              captureEnabled={captureMenuScroll}\n              onTopArrive={onMenuScrollToTop}\n              onBottomArrive={onMenuScrollToBottom}\n              lockEnabled={menuShouldBlockScroll}\n            >\n              {(scrollTargetRef) => (\n                <MenuList\n                  {...commonProps}\n                  innerRef={(instance) => {\n                    this.getMenuListRef(instance);\n                    scrollTargetRef(instance);\n                  }}\n                  isLoading={isLoading}\n                  maxHeight={maxHeight}\n                  focusedOption={focusedOption}\n                >\n                  {menuUI}\n                </MenuList>\n              )}\n            </ScrollManager>\n          </Menu>\n        )}\n      </MenuPlacer>\n    );\n\n    // positioning behaviour is almost identical for portalled and fixed,\n    // so we use the same component. the actual portalling logic is forked\n    // within the component based on `menuPosition`\n    return menuPortalTarget || menuPosition === 'fixed' ? (\n      <MenuPortal\n        {...commonProps}\n        appendTo={menuPortalTarget}\n        controlElement={this.controlRef}\n        menuPlacement={menuPlacement}\n        menuPosition={menuPosition}\n      >\n        {menuElement}\n      </MenuPortal>\n    ) : (\n      menuElement\n    );\n  }\n  renderFormField() {\n    const { delimiter, isDisabled, isMulti, name } = this.props;\n    const { selectValue } = this.state;\n\n    if (!name || isDisabled) return;\n\n    if (isMulti) {\n      if (delimiter) {\n        const value = selectValue\n          .map((opt) => this.getOptionValue(opt))\n          .join(delimiter);\n        return <input name={name} type=\"hidden\" value={value} />;\n      } else {\n        const input =\n          selectValue.length > 0 ? (\n            selectValue.map((opt, i) => (\n              <input\n                key={`i-${i}`}\n                name={name}\n                type=\"hidden\"\n                value={this.getOptionValue(opt)}\n              />\n            ))\n          ) : (\n            <input name={name} type=\"hidden\" />\n          );\n\n        return <div>{input}</div>;\n      }\n    } else {\n      const value = selectValue[0] ? this.getOptionValue(selectValue[0]) : '';\n      return <input name={name} type=\"hidden\" value={value} />;\n    }\n  }\n\n  renderLiveRegion() {\n    const { commonProps } = this;\n    const {\n      ariaSelection,\n      focusedOption,\n      focusedValue,\n      isFocused,\n      selectValue,\n    } = this.state;\n\n    const focusableOptions = this.getFocusableOptions();\n\n    return (\n      <LiveRegion\n        {...commonProps}\n        id={this.getElementId('live-region')}\n        ariaSelection={ariaSelection}\n        focusedOption={focusedOption}\n        focusedValue={focusedValue}\n        isFocused={isFocused}\n        selectValue={selectValue}\n        focusableOptions={focusableOptions}\n      />\n    );\n  }\n\n  render() {\n    const { Control, IndicatorsContainer, SelectContainer, ValueContainer } =\n      this.getComponents();\n\n    const { className, id, isDisabled, menuIsOpen } = this.props;\n    const { isFocused } = this.state;\n    const commonProps = (this.commonProps = this.getCommonProps());\n\n    return (\n      <SelectContainer\n        {...commonProps}\n        className={className}\n        innerProps={{\n          id: id,\n          onKeyDown: this.onKeyDown,\n        }}\n        isDisabled={isDisabled}\n        isFocused={isFocused}\n      >\n        {this.renderLiveRegion()}\n        <Control\n          {...commonProps}\n          innerRef={this.getControlRef}\n          innerProps={{\n            onMouseDown: this.onControlMouseDown,\n            onTouchEnd: this.onControlTouchEnd,\n          }}\n          isDisabled={isDisabled}\n          isFocused={isFocused}\n          menuIsOpen={menuIsOpen}\n        >\n          <ValueContainer {...commonProps} isDisabled={isDisabled}>\n            {this.renderPlaceholderOrValue()}\n            {this.renderInput()}\n          </ValueContainer>\n          <IndicatorsContainer {...commonProps} isDisabled={isDisabled}>\n            {this.renderClearIndicator()}\n            {this.renderLoadingIndicator()}\n            {this.renderIndicatorSeparator()}\n            {this.renderDropdownIndicator()}\n          </IndicatorsContainer>\n        </Control>\n        {this.renderMenu()}\n        {this.renderFormField()}\n      </SelectContainer>\n    );\n  }\n}\n\nexport type PublicBaseSelectProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> = JSX.LibraryManagedAttributes<typeof Select, Props<Option, IsMulti, Group>>;\n","import {\n  ActionMeta,\n  GroupBase,\n  InputActionMeta,\n  OnChangeValue,\n  OptionBase,\n  PropsValue,\n} from './types';\nimport { PublicBaseSelectProps } from './Select';\nimport { useCallback, useState, useMemo } from 'react';\n\ntype StateManagedPropKeys =\n  | 'inputValue'\n  | 'menuIsOpen'\n  | 'onChange'\n  | 'onInputChange'\n  | 'onMenuClose'\n  | 'onMenuOpen'\n  | 'value';\n\ntype SelectPropsWithOptionalStateManagedProps<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>\n> = Omit<PublicBaseSelectProps<Option, IsMulti, Group>, StateManagedPropKeys> &\n  Partial<PublicBaseSelectProps<Option, IsMulti, Group>>;\n\nexport interface StateManagerAdditionalProps<Option extends OptionBase> {\n  defaultInputValue?: string;\n  defaultMenuIsOpen?: boolean;\n  defaultValue?: PropsValue<Option>;\n}\n\nexport type StateManagerProps<\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = boolean,\n  Group extends GroupBase<Option> = GroupBase<Option>\n> = SelectPropsWithOptionalStateManagedProps<Option, IsMulti, Group> &\n  StateManagerAdditionalProps<Option>;\n\nexport default function useStateManager<\n  Option extends OptionBase,\n  IsMulti extends boolean,\n  Group extends GroupBase<Option>,\n  AdditionalProps\n>({\n  defaultInputValue = '',\n  defaultMenuIsOpen = false,\n  defaultValue = null,\n  inputValue: propsInputValue,\n  menuIsOpen: propsMenuIsOpen,\n  onChange: propsOnChange,\n  onInputChange: propsOnInputChange,\n  onMenuClose: propsOnMenuClose,\n  onMenuOpen: propsOnMenuOpen,\n  value: propsValue,\n  ...restSelectProps\n}: StateManagerProps<Option, IsMulti, Group> &\n  AdditionalProps): PublicBaseSelectProps<Option, IsMulti, Group> &\n  Omit<\n    AdditionalProps,\n    keyof StateManagerAdditionalProps<Option> | StateManagedPropKeys\n  > {\n  const stateInputValue = useMemo(\n    () => propsInputValue !== undefined ? propsInputValue : defaultInputValue,\n    [propsInputValue, defaultInputValue]\n  );\n  const [stateMenuIsOpen, setStateMenuIsOpen] = useState(\n    propsMenuIsOpen !== undefined ? propsMenuIsOpen : defaultMenuIsOpen\n  );\n  const stateValue = useMemo(\n    () => propsValue !== undefined ? propsValue : defaultValue,\n    [propsValue, defaultValue]\n  );\n\n  const onChange = useCallback(\n    (value: OnChangeValue<Option, IsMulti>, actionMeta: ActionMeta<Option>) => {\n      if (typeof propsOnChange === 'function') {\n        propsOnChange(value, actionMeta);\n      }\n    },\n    [propsOnChange]\n  );\n  const onInputChange = useCallback(\n    (value: string, actionMeta: InputActionMeta) => {\n      let newValue;\n      if (typeof propsOnInputChange === 'function') {\n        newValue = propsOnInputChange(value, actionMeta);\n      }\n    },\n    [propsOnInputChange]\n  );\n  const onMenuOpen = useCallback(() => {\n    if (typeof propsOnMenuOpen === 'function') {\n      propsOnMenuOpen();\n    }\n    setStateMenuIsOpen(true);\n  }, [propsOnMenuOpen]);\n  const onMenuClose = useCallback(() => {\n    if (typeof propsOnMenuClose === 'function') {\n      propsOnMenuClose();\n    }\n    setStateMenuIsOpen(false);\n  }, [propsOnMenuClose]);\n\n  const inputValue =\n    propsInputValue !== undefined ? propsInputValue : stateInputValue;\n  const menuIsOpen =\n    propsMenuIsOpen !== undefined ? propsMenuIsOpen : stateMenuIsOpen;\n  const value = propsValue !== undefined ? propsValue : stateValue;\n\n  return {\n    ...restSelectProps,\n    inputValue,\n    menuIsOpen,\n    onChange,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n    value,\n  };\n}\n","import React, { MutableRefObject, ReactElement, RefAttributes } from 'react';\n\nimport { GroupBase, OptionBase } from './types';\nimport Select from './Select';\nimport useStateManager from './useStateManager';\nimport type { StateManagerProps } from './useStateManager';\nexport type { StateManagerProps };\n\ntype StateManagedSelect = <\n  Option extends OptionBase = OptionBase,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: StateManagerProps<Option, IsMulti, Group> &\n    RefAttributes<Select<Option, IsMulti, Group>>\n) => ReactElement;\n\nconst StateManagedSelect = React.forwardRef(\n  <\n    Option extends OptionBase,\n    IsMulti extends boolean,\n    Group extends GroupBase<Option>\n  >(\n    props: StateManagerProps<Option, IsMulti, Group>,\n    ref:\n      | ((instance: Select<Option, IsMulti, Group> | null) => void)\n      | MutableRefObject<Select<Option, IsMulti, Group> | null>\n      | null\n  ) => {\n    const baseSelectProps = useStateManager(props);\n\n    return <Select ref={ref} {...baseSelectProps} />;\n  }\n) as StateManagedSelect;\n\nexport default StateManagedSelect;\n","import React, { Component, ReactNode } from 'react';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport memoizeOne from 'memoize-one';\n\ninterface NonceProviderProps {\n  nonce: string;\n  children: ReactNode;\n  cacheKey: string;\n}\n\nexport default class NonceProvider extends Component<NonceProviderProps> {\n  constructor(props: NonceProviderProps) {\n    super(props);\n    this.createEmotionCache = memoizeOne(this.createEmotionCache);\n  }\n  createEmotionCache = (nonce: string, key: string) => {\n    return createCache({ nonce, key });\n  };\n  render() {\n    const emotionCache = this.createEmotionCache(\n      this.props.nonce,\n      this.props.cacheKey\n    );\n    return (\n      <CacheProvider value={emotionCache}>{this.props.children}</CacheProvider>\n    );\n  }\n}\n"],"names":["noop","applyPrefixToName","prefix","name","classNames","state","className","arr","key","hasOwnProperty","push","filter","i","map","String","trim","join","cleanValue","value","isArray","Boolean","cleanCommonProps","props","innerProps","isDocumentElement","el","document","documentElement","body","window","indexOf","getScrollTop","pageYOffset","scrollTop","scrollTo","top","getScrollParent","element","style","getComputedStyle","excludeStaticParent","position","overflowRx","parent","parentElement","test","overflow","overflowY","overflowX","easeOutCubic","t","b","c","d","animatedScrollTo","to","duration","callback","start","change","increment","currentTime","animateScroll","val","requestAnimationFrame","scrollIntoView","menuEl","focusedEl","menuRect","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","Math","min","offsetTop","clientHeight","scrollHeight","max","getBoundingClientObj","rect","height","left","right","width","isTouchCapable","createEvent","e","isMobileDevice","navigator","userAgent","passiveOptionAccessed","options","passive","w","addEventListener","removeEventListener","supportsPassiveEvents","notNullish","item","arg","Array","valueTernary","isMulti","multiValue","singleValue","singleValueAsValue","multiValueAsValue","getMenuPlacement","maxHeight","minHeight","placement","shouldScroll","isFixedPosition","theme","spacing","scrollParent","defaultState","offsetParent","menuBottom","menuHeight","menuTop","containerTop","viewHeight","innerHeight","marginBottom","parseInt","marginTop","viewSpaceAbove","viewSpaceBelow","scrollSpaceAbove","scrollSpaceBelow","scrollDown","scrollUp","scrollDuration","constrainedHeight","spaceAbove","controlHeight","Error","alignToControl","placementToCSSProp","coercePlacement","p","menuCSS","borderRadius","colors","label","backgroundColor","neutral0","boxShadow","menuGutter","zIndex","PortalPlacementContext","createContext","getPortalPlacement","MenuPlacer","maxMenuHeight","ref","minMenuHeight","menuPlacement","menuPosition","menuShouldScrollIntoView","context","setState","render","children","getPlacement","placerProps","getUpdatedProps","Component","Menu","cx","getStyles","innerRef","jsx","css","menu","menuListCSS","baseUnit","paddingBottom","paddingTop","WebkitOverflowScrolling","MenuList","noticeCSS","color","neutral40","padding","textAlign","noOptionsMessageCSS","loadingMessageCSS","NoOptionsMessage","defaultProps","LoadingMessage","menuPortalCSS","offset","MenuPortal","initialPlacement","appendTo","controlElement","isFixed","scrollDistance","menuWrapper","Provider","createPortal","A11yText","border","clip","whiteSpace","defaultAriaLiveMessages","guidance","isSearchable","isDisabled","tabSelectsValue","onChange","action","labels","length","onFocus","focused","selectValue","isSelected","getArrayIndex","disabled","status","onFilter","inputValue","resultsMessage","LiveRegion","ariaSelection","focusedOption","focusedValue","focusableOptions","isFocused","selectProps","id","ariaLiveMessages","getOptionLabel","isOptionDisabled","menuIsOpen","screenReaderStatus","ariaLabel","ariaLive","messages","useMemo","ariaSelected","message","option","selectedOptions","removedValue","removedValues","asOption","selected","multiSelected","undefined","onChangeProps","ariaFocused","focusMsg","includes","onFocusProps","ariaResults","resultsMsg","count","ariaGuidance","guidanceMsg","ariaContext","ScreenReaderText","React","Fragment","isInitialFocus","diacritics","base","letters","anyDiacritic","RegExp","diacriticToBase","diacritic","j","stripDiacritics","str","replace","match","memoizedStripDiacriticsForInput","memoizeOne","trimString","defaultStringify","createFilter","config","rawInput","data","__isNew__","ignoreCase","ignoreAccents","stringify","matchFrom","input","candidate","toLowerCase","substr","DummyInput","background","caretColor","fontSize","outline","opacity","transform","cancelScroll","event","preventDefault","stopPropagation","useScrollCapture","isEnabled","onBottomArrive","onBottomLeave","onTopArrive","onTopLeave","isBottom","useRef","isTop","touchStart","scrollTarget","handleEventDelta","useCallback","delta","current","target","isDeltaPositive","availableScroll","shouldCancelScroll","onWheel","deltaY","onTouchStart","changedTouches","clientY","onTouchMove","startListening","notPassive","stopListening","useEffect","STYLE_KEYS","LOCK_STYLES","boxSizing","preventTouchMove","allowTouchMove","preventInertiaScroll","totalScroll","currentScroll","isTouchDevice","maxTouchPoints","canUseDOM","createElement","activeScrollLocks","listenerOptions","capture","useScrollLock","accountForScrollbars","originalStyles","addScrollLock","touchScrollTarget","targetStyle","forEach","currentPadding","paddingRight","clientWidth","adjustedPadding","innerWidth","Object","keys","removeScrollLock","blurSelectInput","activeElement","blur","ScrollManager","lockEnabled","captureEnabled","setScrollCaptureTarget","setScrollLockTarget","targetRef","onClick","formatGroupLabel","group","getOptionValue","containerCSS","isRtl","direction","pointerEvents","SelectContainer","valueContainerCSS","alignItems","display","flex","flexWrap","ValueContainer","hasValue","indicatorsContainerCSS","alignSelf","flexShrink","IndicatorsContainer","indicators","Svg","size","viewBox","focusable","fill","lineHeight","stroke","strokeWidth","CrossIcon","DownChevron","baseCSS","neutral60","neutral20","transition","neutral80","dropdownIndicatorCSS","DropdownIndicator","indicator","clearIndicatorCSS","ClearIndicator","indicatorSeparatorCSS","neutral10","IndicatorSeparator","loadingDotAnimations","keyframes","loadingIndicatorCSS","marginRight","verticalAlign","LoadingDot","delay","animation","marginLeft","LoadingIndicator","neutral5","borderColor","primary","borderStyle","borderWidth","cursor","justifyContent","neutral30","Control","control","groupCSS","Group","Heading","headingProps","groupHeadingCSS","fontWeight","paddingLeft","textTransform","GroupHeading","inputCSS","margin","visibility","containerStyle","spacingStyle","gridArea","font","minWidth","gridTemplateColumns","content","inputStyle","isHidden","Input","inputClassName","multiValueCSS","multiValueLabelCSS","cropWithEllipsis","textOverflow","multiValueRemoveCSS","dangerLight","danger","MultiValueGeneric","MultiValueContainer","MultiValueLabel","MultiValueRemove","role","MultiValue","components","removeProps","Container","Label","Remove","ClassNames","emotionCx","optionCSS","primary25","userSelect","WebkitTapHighlightColor","primary50","Option","placeholderCSS","neutral50","Placeholder","placeholder","maxWidth","SingleValue","defaultComponents","defaultStyles","clearIndicator","container","controlCSS","dropdownIndicator","groupHeading","indicatorsContainer","indicatorSeparator","loadingIndicator","loadingMessage","menuList","menuPortal","multiValueLabel","multiValueRemove","noOptionsMessage","singleValueCSS","valueContainer","mergeStyles","source","styles","keyAsString","rsCss","primary75","neutral70","neutral90","defaultTheme","backspaceRemovesValue","blurInputOnSelect","captureMenuScroll","closeMenuOnSelect","closeMenuOnScroll","controlShouldRenderValue","escapeClearsValue","filterOption","formatGroupLabelBuiltin","getOptionLabelBuiltin","getOptionValueBuiltin","isLoading","isOptionDisabledBuiltin","menuShouldBlockScroll","openMenuOnFocus","openMenuOnClick","pageSize","tabIndex","toCategorizedOption","index","isOptionSelected","type","buildCategorizedOptions","groupOrOption","groupOrOptionIndex","categorizedOptions","optionIndex","categorizedOption","isFocusable","buildFocusableOptionsFromCategorizedOptions","reduce","optionsAccumulator","buildFocusableOptions","shouldHideSelectedOptions","getNextFocusedValue","nextSelectValue","lastSelectValue","lastFocusedIndex","nextFocusedIndex","getNextFocusedOption","lastFocusedOption","some","hideSelectedOptions","instanceId","Select","inputIsHidden","clearFocusValueOnUpdate","prevWasFocused","inputIsHiddenAfterUpdate","prevProps","controlRef","focusedOptionRef","menuListRef","inputRef","focusInput","blurInput","newValue","actionMeta","ariaOnChange","onInputChange","onMenuClose","deselected","setValue","newValueArray","lastSelectedValue","slice","args","classNamePrefix","custom","instancePrefix","button","blockOptionHover","openAfterFocus","openMenu","tagName","clearValue","setTimeout","HTMLElement","isComposing","touches","touch","initialTouchX","clientX","initialTouchY","userIsDragging","deltaX","abs","moveThreshold","contains","onControlMouseDown","onClearIndicatorMouseDown","onDropdownIndicatorMouseDown","currentTarget","onMenuOpen","focus","onBlur","isClearable","onKeyDown","defaultPrevented","focusValue","removeValue","popValue","shiftKey","selectOption","keyCode","focusOption","getDerivedStateFromProps","newMenuOptionsState","newInputIsHiddenState","newAriaSelection","hasKeptFocus","componentDidMount","startListeningComposition","startListeningToTouch","onScroll","autoFocus","componentDidUpdate","scrollToFocusedOptionOnUpdate","componentWillUnmount","stopListeningComposition","stopListeningToTouch","openAtIndex","selectedIndex","focusedIndex","lastIndex","nextFocus","getFocusableOptions","getTheme","getCommonProps","getValue","hasOptions","formatOptionLabel","onCompositionStart","onCompositionEnd","onTouchEnd","renderInput","inputId","form","getComponents","commonProps","getElementId","ariaAttributes","getInputRef","onInputBlur","onInputFocus","inputMode","autoCapitalize","autoComplete","autoCorrect","handleInputChange","spellCheck","renderPlaceholderOrValue","opt","isOptionFocused","onMouseDown","renderClearIndicator","onClearIndicatorTouchEnd","renderLoadingIndicator","renderIndicatorSeparator","renderDropdownIndicator","onDropdownIndicatorTouchEnd","renderMenu","menuPortalTarget","onMenuScrollToTop","onMenuScrollToBottom","onHover","onOptionHover","onSelect","optionId","onMouseMove","onMouseOver","getFocusedOptionRef","menuUI","getCategorizedOptions","groupIndex","groupId","headingId","menuPlacementProps","menuElement","onMenuMouseDown","onMenuMouseMove","scrollTargetRef","instance","getMenuListRef","renderFormField","delimiter","renderLiveRegion","getControlRef","onControlTouchEnd","useStateManager","defaultInputValue","defaultMenuIsOpen","defaultValue","propsInputValue","propsMenuIsOpen","propsOnChange","propsOnInputChange","propsOnMenuClose","propsOnMenuOpen","propsValue","restSelectProps","stateInputValue","useState","stateMenuIsOpen","setStateMenuIsOpen","stateValue","StateManagedSelect","forwardRef","baseSelectProps","NonceProvider","nonce","createCache","createEmotionCache","emotionCache","cacheKey","CacheProvider"],"mappings":"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"}